{"ast":null,"code":"// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\n\nvar IObject = require('./_iobject');\n\nvar toObject = require('./_to-object');\n\nvar toLength = require('./_to-length');\n\nvar asc = require('./_array-species-create');\n\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n\n    for (; length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n\n      if (TYPE) {\n        if (IS_MAP) result[index] = res; // map\n        else if (res) switch (TYPE) {\n            case 3:\n              return true;\n            // some\n\n            case 5:\n              return val;\n            // find\n\n            case 6:\n              return index;\n            // findIndex\n\n            case 2:\n              result.push(val);\n            // filter\n          } else if (IS_EVERY) return false; // every\n      }\n    }\n\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/babel-polyfill/node_modules/core-js/modules/_array-methods.js"],"names":["ctx","require","IObject","toObject","toLength","asc","module","exports","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","$this","callbackfn","that","O","self","f","length","index","result","undefined","val","res","push"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,YAAD,CAArB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAII,GAAG,GAAGJ,OAAO,CAAC,yBAAD,CAAjB;;AACAK,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AACxC,MAAIC,MAAM,GAAGF,IAAI,IAAI,CAArB;AACA,MAAIG,SAAS,GAAGH,IAAI,IAAI,CAAxB;AACA,MAAII,OAAO,GAAGJ,IAAI,IAAI,CAAtB;AACA,MAAIK,QAAQ,GAAGL,IAAI,IAAI,CAAvB;AACA,MAAIM,aAAa,GAAGN,IAAI,IAAI,CAA5B;AACA,MAAIO,QAAQ,GAAGP,IAAI,IAAI,CAAR,IAAaM,aAA5B;AACA,MAAIE,MAAM,GAAGP,OAAO,IAAIJ,GAAxB;AACA,SAAO,UAAUY,KAAV,EAAiBC,UAAjB,EAA6BC,IAA7B,EAAmC;AACxC,QAAIC,CAAC,GAAGjB,QAAQ,CAACc,KAAD,CAAhB;AACA,QAAII,IAAI,GAAGnB,OAAO,CAACkB,CAAD,CAAlB;AACA,QAAIE,CAAC,GAAGtB,GAAG,CAACkB,UAAD,EAAaC,IAAb,EAAmB,CAAnB,CAAX;AACA,QAAII,MAAM,GAAGnB,QAAQ,CAACiB,IAAI,CAACE,MAAN,CAArB;AACA,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAIC,MAAM,GAAGf,MAAM,GAAGM,MAAM,CAACC,KAAD,EAAQM,MAAR,CAAT,GAA2BZ,SAAS,GAAGK,MAAM,CAACC,KAAD,EAAQ,CAAR,CAAT,GAAsBS,SAA7E;AACA,QAAIC,GAAJ,EAASC,GAAT;;AACA,WAAML,MAAM,GAAGC,KAAf,EAAsBA,KAAK,EAA3B,EAA+B,IAAIT,QAAQ,IAAIS,KAAK,IAAIH,IAAzB,EAA+B;AAC5DM,MAAAA,GAAG,GAAGN,IAAI,CAACG,KAAD,CAAV;AACAI,MAAAA,GAAG,GAAGN,CAAC,CAACK,GAAD,EAAMH,KAAN,EAAaJ,CAAb,CAAP;;AACA,UAAIZ,IAAJ,EAAU;AACR,YAAIE,MAAJ,EAAYe,MAAM,CAACD,KAAD,CAAN,GAAgBI,GAAhB,CAAZ,CAAmC;AAAnC,aACK,IAAIA,GAAJ,EAAS,QAAQpB,IAAR;AACZ,iBAAK,CAAL;AAAQ,qBAAO,IAAP;AAAyB;;AACjC,iBAAK,CAAL;AAAQ,qBAAOmB,GAAP;AAAyB;;AACjC,iBAAK,CAAL;AAAQ,qBAAOH,KAAP;AAAyB;;AACjC,iBAAK,CAAL;AAAQC,cAAAA,MAAM,CAACI,IAAP,CAAYF,GAAZ;AAAyB;AAJrB,WAAT,MAKE,IAAId,QAAJ,EAAc,OAAO,KAAP,CAPb,CAO2B;AACpC;AACF;;AACD,WAAOC,aAAa,GAAG,CAAC,CAAJ,GAAQF,OAAO,IAAIC,QAAX,GAAsBA,QAAtB,GAAiCY,MAA7D;AACD,GAtBD;AAuBD,CA/BD","sourcesContent":["// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n"]},"metadata":{},"sourceType":"script"}