{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from './Button';\nimport SafeAnchor from './SafeAnchor';\nimport { bsClass as setBsClass } from './utils/bootstrapUtils';\nvar propTypes = {\n  noCaret: PropTypes.bool,\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  useAnchor: PropTypes.bool\n};\nvar defaultProps = {\n  open: false,\n  useAnchor: false,\n  bsRole: 'toggle'\n};\n\nvar DropdownToggle = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(DropdownToggle, _React$Component);\n\n  function DropdownToggle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = DropdownToggle.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        noCaret = _this$props.noCaret,\n        open = _this$props.open,\n        useAnchor = _this$props.useAnchor,\n        bsClass = _this$props.bsClass,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"noCaret\", \"open\", \"useAnchor\", \"bsClass\", \"className\", \"children\"]);\n\n    delete props.bsRole;\n    var Component = useAnchor ? SafeAnchor : Button;\n    var useCaret = !noCaret; // This intentionally forwards bsSize and bsStyle (if set) to the\n    // underlying component, to allow it to render size and style variants.\n    // FIXME: Should this really fall back to `title` as children?\n\n    return React.createElement(Component, _extends({}, props, {\n      role: \"button\",\n      className: classNames(className, bsClass),\n      \"aria-haspopup\": true,\n      \"aria-expanded\": open\n    }), children || props.title, useCaret && ' ', useCaret && React.createElement(\"span\", {\n      className: \"caret\"\n    }));\n  };\n\n  return DropdownToggle;\n}(React.Component);\n\nDropdownToggle.propTypes = propTypes;\nDropdownToggle.defaultProps = defaultProps;\nexport default setBsClass('dropdown-toggle', DropdownToggle);","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/react-bootstrap/es/DropdownToggle.js"],"names":["_extends","_objectWithoutPropertiesLoose","_inheritsLoose","React","PropTypes","classNames","Button","SafeAnchor","bsClass","setBsClass","propTypes","noCaret","bool","open","title","string","useAnchor","defaultProps","bsRole","DropdownToggle","_React$Component","apply","arguments","_proto","prototype","render","_this$props","props","className","children","Component","useCaret","createElement","role"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,4CAArB;AACA,OAAOC,6BAAP,MAA0C,iEAA1C;AACA,OAAOC,cAAP,MAA2B,kDAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAO,IAAIC,UAApB,QAAsC,wBAAtC;AACA,IAAIC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAEP,SAAS,CAACQ,IADL;AAEdC,EAAAA,IAAI,EAAET,SAAS,CAACQ,IAFF;AAGdE,EAAAA,KAAK,EAAEV,SAAS,CAACW,MAHH;AAIdC,EAAAA,SAAS,EAAEZ,SAAS,CAACQ;AAJP,CAAhB;AAMA,IAAIK,YAAY,GAAG;AACjBJ,EAAAA,IAAI,EAAE,KADW;AAEjBG,EAAAA,SAAS,EAAE,KAFM;AAGjBE,EAAAA,MAAM,EAAE;AAHS,CAAnB;;AAMA,IAAIC,cAAc,GAClB,aACA,UAAUC,gBAAV,EAA4B;AAC1BlB,EAAAA,cAAc,CAACiB,cAAD,EAAiBC,gBAAjB,CAAd;;AAEA,WAASD,cAAT,GAA0B;AACxB,WAAOC,gBAAgB,CAACC,KAAjB,CAAuB,IAAvB,EAA6BC,SAA7B,KAA2C,IAAlD;AACD;;AAED,MAAIC,MAAM,GAAGJ,cAAc,CAACK,SAA5B;;AAEAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,QAAIC,WAAW,GAAG,KAAKC,KAAvB;AAAA,QACIhB,OAAO,GAAGe,WAAW,CAACf,OAD1B;AAAA,QAEIE,IAAI,GAAGa,WAAW,CAACb,IAFvB;AAAA,QAGIG,SAAS,GAAGU,WAAW,CAACV,SAH5B;AAAA,QAIIR,OAAO,GAAGkB,WAAW,CAAClB,OAJ1B;AAAA,QAKIoB,SAAS,GAAGF,WAAW,CAACE,SAL5B;AAAA,QAMIC,QAAQ,GAAGH,WAAW,CAACG,QAN3B;AAAA,QAOIF,KAAK,GAAG1B,6BAA6B,CAACyB,WAAD,EAAc,CAAC,SAAD,EAAY,MAAZ,EAAoB,WAApB,EAAiC,SAAjC,EAA4C,WAA5C,EAAyD,UAAzD,CAAd,CAPzC;;AASA,WAAOC,KAAK,CAACT,MAAb;AACA,QAAIY,SAAS,GAAGd,SAAS,GAAGT,UAAH,GAAgBD,MAAzC;AACA,QAAIyB,QAAQ,GAAG,CAACpB,OAAhB,CAZgC,CAYP;AACzB;AACA;;AAEA,WAAOR,KAAK,CAAC6B,aAAN,CAAoBF,SAApB,EAA+B9B,QAAQ,CAAC,EAAD,EAAK2B,KAAL,EAAY;AACxDM,MAAAA,IAAI,EAAE,QADkD;AAExDL,MAAAA,SAAS,EAAEvB,UAAU,CAACuB,SAAD,EAAYpB,OAAZ,CAFmC;AAGxD,uBAAiB,IAHuC;AAIxD,uBAAiBK;AAJuC,KAAZ,CAAvC,EAKHgB,QAAQ,IAAIF,KAAK,CAACb,KALf,EAKsBiB,QAAQ,IAAI,GALlC,EAKuCA,QAAQ,IAAI5B,KAAK,CAAC6B,aAAN,CAAoB,MAApB,EAA4B;AACpFJ,MAAAA,SAAS,EAAE;AADyE,KAA5B,CALnD,CAAP;AAQD,GAxBD;;AA0BA,SAAOT,cAAP;AACD,CApCD,CAoCEhB,KAAK,CAAC2B,SApCR,CAFA;;AAwCAX,cAAc,CAACT,SAAf,GAA2BA,SAA3B;AACAS,cAAc,CAACF,YAAf,GAA8BA,YAA9B;AACA,eAAeR,UAAU,CAAC,iBAAD,EAAoBU,cAApB,CAAzB","sourcesContent":["import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from './Button';\nimport SafeAnchor from './SafeAnchor';\nimport { bsClass as setBsClass } from './utils/bootstrapUtils';\nvar propTypes = {\n  noCaret: PropTypes.bool,\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  useAnchor: PropTypes.bool\n};\nvar defaultProps = {\n  open: false,\n  useAnchor: false,\n  bsRole: 'toggle'\n};\n\nvar DropdownToggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(DropdownToggle, _React$Component);\n\n  function DropdownToggle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = DropdownToggle.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        noCaret = _this$props.noCaret,\n        open = _this$props.open,\n        useAnchor = _this$props.useAnchor,\n        bsClass = _this$props.bsClass,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"noCaret\", \"open\", \"useAnchor\", \"bsClass\", \"className\", \"children\"]);\n\n    delete props.bsRole;\n    var Component = useAnchor ? SafeAnchor : Button;\n    var useCaret = !noCaret; // This intentionally forwards bsSize and bsStyle (if set) to the\n    // underlying component, to allow it to render size and style variants.\n    // FIXME: Should this really fall back to `title` as children?\n\n    return React.createElement(Component, _extends({}, props, {\n      role: \"button\",\n      className: classNames(className, bsClass),\n      \"aria-haspopup\": true,\n      \"aria-expanded\": open\n    }), children || props.title, useCaret && ' ', useCaret && React.createElement(\"span\", {\n      className: \"caret\"\n    }));\n  };\n\n  return DropdownToggle;\n}(React.Component);\n\nDropdownToggle.propTypes = propTypes;\nDropdownToggle.defaultProps = defaultProps;\nexport default setBsClass('dropdown-toggle', DropdownToggle);"]},"metadata":{},"sourceType":"module"}