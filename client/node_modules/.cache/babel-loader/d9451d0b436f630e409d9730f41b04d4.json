{"ast":null,"code":"'use strict';\n\nvar $export = require('./_export');\n\nvar createProperty = require('./_create-property'); // WebKit Array.of isn't generic\n\n\n$export($export.S + $export.F * require('./_fails')(function () {\n  function F() {\n    /* empty */\n  }\n\n  return !(Array.of.call(F) instanceof F);\n}), 'Array', {\n  // 22.1.2.3 Array.of( ...items)\n  of: function of()\n  /* ...args */\n  {\n    var index = 0;\n    var aLen = arguments.length;\n    var result = new (typeof this == 'function' ? this : Array)(aLen);\n\n    while (aLen > index) createProperty(result, index, arguments[index++]);\n\n    result.length = aLen;\n    return result;\n  }\n});","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/babel-polyfill/node_modules/core-js/modules/es6.array.of.js"],"names":["$export","require","createProperty","S","F","Array","of","call","index","aLen","arguments","length","result"],"mappings":"AAAA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,oBAAD,CAA5B,C,CAEA;;;AACAD,OAAO,CAACA,OAAO,CAACG,CAAR,GAAYH,OAAO,CAACI,CAAR,GAAYH,OAAO,CAAC,UAAD,CAAP,CAAoB,YAAY;AAC9D,WAASG,CAAT,GAAa;AAAE;AAAa;;AAC5B,SAAO,EAAEC,KAAK,CAACC,EAAN,CAASC,IAAT,CAAcH,CAAd,aAA4BA,CAA9B,CAAP;AACD,CAH+B,CAAzB,EAGH,OAHG,EAGM;AACX;AACAE,EAAAA,EAAE,EAAE,SAASA,EAAT;AAAY;AAAe;AAC7B,QAAIE,KAAK,GAAG,CAAZ;AACA,QAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB;AACA,QAAIC,MAAM,GAAG,KAAK,OAAO,IAAP,IAAe,UAAf,GAA4B,IAA5B,GAAmCP,KAAxC,EAA+CI,IAA/C,CAAb;;AACA,WAAOA,IAAI,GAAGD,KAAd,EAAqBN,cAAc,CAACU,MAAD,EAASJ,KAAT,EAAgBE,SAAS,CAACF,KAAK,EAAN,CAAzB,CAAd;;AACrBI,IAAAA,MAAM,CAACD,MAAP,GAAgBF,IAAhB;AACA,WAAOG,MAAP;AACD;AATU,CAHN,CAAP","sourcesContent":["'use strict';\nvar $export = require('./_export');\nvar createProperty = require('./_create-property');\n\n// WebKit Array.of isn't generic\n$export($export.S + $export.F * require('./_fails')(function () {\n  function F() { /* empty */ }\n  return !(Array.of.call(F) instanceof F);\n}), 'Array', {\n  // 22.1.2.3 Array.of( ...items)\n  of: function of(/* ...args */) {\n    var index = 0;\n    var aLen = arguments.length;\n    var result = new (typeof this == 'function' ? this : Array)(aLen);\n    while (aLen > index) createProperty(result, index, arguments[index++]);\n    result.length = aLen;\n    return result;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}