{"ast":null,"code":"'use strict'; // 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\n\nvar fails = require('./_fails');\n\nvar getTime = Date.prototype.getTime;\nvar $toISOString = Date.prototype.toISOString;\n\nvar lz = function (num) {\n  return num > 9 ? num : '0' + num;\n}; // PhantomJS / old WebKit has a broken implementations\n\n\nmodule.exports = fails(function () {\n  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';\n}) || !fails(function () {\n  $toISOString.call(new Date(NaN));\n}) ? function toISOString() {\n  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');\n  var d = this;\n  var y = d.getUTCFullYear();\n  var m = d.getUTCMilliseconds();\n  var s = y < 0 ? '-' : y > 9999 ? '+' : '';\n  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) + '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) + 'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) + ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';\n} : $toISOString;","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/babel-polyfill/node_modules/core-js/modules/_date-to-iso-string.js"],"names":["fails","require","getTime","Date","prototype","$toISOString","toISOString","lz","num","module","exports","call","NaN","isFinite","RangeError","d","y","getUTCFullYear","m","getUTCMilliseconds","s","Math","abs","slice","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIC,OAAO,GAAGC,IAAI,CAACC,SAAL,CAAeF,OAA7B;AACA,IAAIG,YAAY,GAAGF,IAAI,CAACC,SAAL,CAAeE,WAAlC;;AAEA,IAAIC,EAAE,GAAG,UAAUC,GAAV,EAAe;AACtB,SAAOA,GAAG,GAAG,CAAN,GAAUA,GAAV,GAAgB,MAAMA,GAA7B;AACD,CAFD,C,CAIA;;;AACAC,MAAM,CAACC,OAAP,GAAkBV,KAAK,CAAC,YAAY;AAClC,SAAOK,YAAY,CAACM,IAAb,CAAkB,IAAIR,IAAJ,CAAS,CAAC,IAAD,GAAQ,CAAjB,CAAlB,KAA0C,0BAAjD;AACD,CAFsB,CAAL,IAEZ,CAACH,KAAK,CAAC,YAAY;AACvBK,EAAAA,YAAY,CAACM,IAAb,CAAkB,IAAIR,IAAJ,CAASS,GAAT,CAAlB;AACD,CAFW,CAFK,GAIX,SAASN,WAAT,GAAuB;AAC3B,MAAI,CAACO,QAAQ,CAACX,OAAO,CAACS,IAAR,CAAa,IAAb,CAAD,CAAb,EAAmC,MAAMG,UAAU,CAAC,oBAAD,CAAhB;AACnC,MAAIC,CAAC,GAAG,IAAR;AACA,MAAIC,CAAC,GAAGD,CAAC,CAACE,cAAF,EAAR;AACA,MAAIC,CAAC,GAAGH,CAAC,CAACI,kBAAF,EAAR;AACA,MAAIC,CAAC,GAAGJ,CAAC,GAAG,CAAJ,GAAQ,GAAR,GAAcA,CAAC,GAAG,IAAJ,GAAW,GAAX,GAAiB,EAAvC;AACA,SAAOI,CAAC,GAAG,CAAC,UAAUC,IAAI,CAACC,GAAL,CAASN,CAAT,CAAX,EAAwBO,KAAxB,CAA8BH,CAAC,GAAG,CAAC,CAAJ,GAAQ,CAAC,CAAxC,CAAJ,GACL,GADK,GACCb,EAAE,CAACQ,CAAC,CAACS,WAAF,KAAkB,CAAnB,CADH,GAC2B,GAD3B,GACiCjB,EAAE,CAACQ,CAAC,CAACU,UAAF,EAAD,CADnC,GAEL,GAFK,GAEClB,EAAE,CAACQ,CAAC,CAACW,WAAF,EAAD,CAFH,GAEuB,GAFvB,GAE6BnB,EAAE,CAACQ,CAAC,CAACY,aAAF,EAAD,CAF/B,GAGL,GAHK,GAGCpB,EAAE,CAACQ,CAAC,CAACa,aAAF,EAAD,CAHH,GAGyB,GAHzB,IAGgCV,CAAC,GAAG,EAAJ,GAASA,CAAT,GAAa,MAAMX,EAAE,CAACW,CAAD,CAHrD,IAG4D,GAHnE;AAID,CAdgB,GAcbb,YAdJ","sourcesContent":["'use strict';\n// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\nvar fails = require('./_fails');\nvar getTime = Date.prototype.getTime;\nvar $toISOString = Date.prototype.toISOString;\n\nvar lz = function (num) {\n  return num > 9 ? num : '0' + num;\n};\n\n// PhantomJS / old WebKit has a broken implementations\nmodule.exports = (fails(function () {\n  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';\n}) || !fails(function () {\n  $toISOString.call(new Date(NaN));\n})) ? function toISOString() {\n  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');\n  var d = this;\n  var y = d.getUTCFullYear();\n  var m = d.getUTCMilliseconds();\n  var s = y < 0 ? '-' : y > 9999 ? '+' : '';\n  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +\n    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +\n    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +\n    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';\n} : $toISOString;\n"]},"metadata":{},"sourceType":"script"}