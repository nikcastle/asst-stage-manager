{"ast":null,"code":"var Map = require('./es6.map');\n\nvar $export = require('./_export');\n\nvar shared = require('./_shared')('metadata');\n\nvar store = shared.store || (shared.store = new (require('./es6.weak-map'))());\n\nvar getOrCreateMetadataMap = function (target, targetKey, create) {\n  var targetMetadata = store.get(target);\n\n  if (!targetMetadata) {\n    if (!create) return undefined;\n    store.set(target, targetMetadata = new Map());\n  }\n\n  var keyMetadata = targetMetadata.get(targetKey);\n\n  if (!keyMetadata) {\n    if (!create) return undefined;\n    targetMetadata.set(targetKey, keyMetadata = new Map());\n  }\n\n  return keyMetadata;\n};\n\nvar ordinaryHasOwnMetadata = function (MetadataKey, O, P) {\n  var metadataMap = getOrCreateMetadataMap(O, P, false);\n  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);\n};\n\nvar ordinaryGetOwnMetadata = function (MetadataKey, O, P) {\n  var metadataMap = getOrCreateMetadataMap(O, P, false);\n  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);\n};\n\nvar ordinaryDefineOwnMetadata = function (MetadataKey, MetadataValue, O, P) {\n  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);\n};\n\nvar ordinaryOwnMetadataKeys = function (target, targetKey) {\n  var metadataMap = getOrCreateMetadataMap(target, targetKey, false);\n  var keys = [];\n  if (metadataMap) metadataMap.forEach(function (_, key) {\n    keys.push(key);\n  });\n  return keys;\n};\n\nvar toMetaKey = function (it) {\n  return it === undefined || typeof it == 'symbol' ? it : String(it);\n};\n\nvar exp = function (O) {\n  $export($export.S, 'Reflect', O);\n};\n\nmodule.exports = {\n  store: store,\n  map: getOrCreateMetadataMap,\n  has: ordinaryHasOwnMetadata,\n  get: ordinaryGetOwnMetadata,\n  set: ordinaryDefineOwnMetadata,\n  keys: ordinaryOwnMetadataKeys,\n  key: toMetaKey,\n  exp: exp\n};","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/babel-polyfill/node_modules/core-js/modules/_metadata.js"],"names":["Map","require","$export","shared","store","getOrCreateMetadataMap","target","targetKey","create","targetMetadata","get","undefined","set","keyMetadata","ordinaryHasOwnMetadata","MetadataKey","O","P","metadataMap","has","ordinaryGetOwnMetadata","ordinaryDefineOwnMetadata","MetadataValue","ordinaryOwnMetadataKeys","keys","forEach","_","key","push","toMetaKey","it","String","exp","S","module","exports","map"],"mappings":"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","sourcesContent":["var Map = require('./es6.map');\nvar $export = require('./_export');\nvar shared = require('./_shared')('metadata');\nvar store = shared.store || (shared.store = new (require('./es6.weak-map'))());\n\nvar getOrCreateMetadataMap = function (target, targetKey, create) {\n  var targetMetadata = store.get(target);\n  if (!targetMetadata) {\n    if (!create) return undefined;\n    store.set(target, targetMetadata = new Map());\n  }\n  var keyMetadata = targetMetadata.get(targetKey);\n  if (!keyMetadata) {\n    if (!create) return undefined;\n    targetMetadata.set(targetKey, keyMetadata = new Map());\n  } return keyMetadata;\n};\nvar ordinaryHasOwnMetadata = function (MetadataKey, O, P) {\n  var metadataMap = getOrCreateMetadataMap(O, P, false);\n  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);\n};\nvar ordinaryGetOwnMetadata = function (MetadataKey, O, P) {\n  var metadataMap = getOrCreateMetadataMap(O, P, false);\n  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);\n};\nvar ordinaryDefineOwnMetadata = function (MetadataKey, MetadataValue, O, P) {\n  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);\n};\nvar ordinaryOwnMetadataKeys = function (target, targetKey) {\n  var metadataMap = getOrCreateMetadataMap(target, targetKey, false);\n  var keys = [];\n  if (metadataMap) metadataMap.forEach(function (_, key) { keys.push(key); });\n  return keys;\n};\nvar toMetaKey = function (it) {\n  return it === undefined || typeof it == 'symbol' ? it : String(it);\n};\nvar exp = function (O) {\n  $export($export.S, 'Reflect', O);\n};\n\nmodule.exports = {\n  store: store,\n  map: getOrCreateMetadataMap,\n  has: ordinaryHasOwnMetadata,\n  get: ordinaryGetOwnMetadata,\n  set: ordinaryDefineOwnMetadata,\n  keys: ordinaryOwnMetadataKeys,\n  key: toMetaKey,\n  exp: exp\n};\n"]},"metadata":{},"sourceType":"script"}