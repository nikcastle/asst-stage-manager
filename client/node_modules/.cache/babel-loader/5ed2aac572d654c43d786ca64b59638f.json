{"ast":null,"code":"'use strict';\n\nvar aFunction = require('./_a-function');\n\nvar isObject = require('./_is-object');\n\nvar invoke = require('./_invoke');\n\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']'; // eslint-disable-next-line no-new-func\n\n\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  }\n\n  return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that\n/* , ...args */\n) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n\n  var bound = function ()\n  /* args... */\n  {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/babel-polyfill/node_modules/core-js/modules/_bind.js"],"names":["aFunction","require","isObject","invoke","arraySlice","slice","factories","construct","F","len","args","n","i","Function","join","module","exports","bind","that","fn","partArgs","call","arguments","bound","concat","length","prototype"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAvB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIG,UAAU,GAAG,GAAGC,KAApB;AACA,IAAIC,SAAS,GAAG,EAAhB;;AAEA,IAAIC,SAAS,GAAG,UAAUC,CAAV,EAAaC,GAAb,EAAkBC,IAAlB,EAAwB;AACtC,MAAI,EAAED,GAAG,IAAIH,SAAT,CAAJ,EAAyB;AACvB,SAAK,IAAIK,CAAC,GAAG,EAAR,EAAYC,CAAC,GAAG,CAArB,EAAwBA,CAAC,GAAGH,GAA5B,EAAiCG,CAAC,EAAlC,EAAsCD,CAAC,CAACC,CAAD,CAAD,GAAO,OAAOA,CAAP,GAAW,GAAlB,CADf,CAEvB;;;AACAN,IAAAA,SAAS,CAACG,GAAD,CAAT,GAAiBI,QAAQ,CAAC,KAAD,EAAQ,kBAAkBF,CAAC,CAACG,IAAF,CAAO,GAAP,CAAlB,GAAgC,GAAxC,CAAzB;AACD;;AAAC,SAAOR,SAAS,CAACG,GAAD,CAAT,CAAeD,CAAf,EAAkBE,IAAlB,CAAP;AACH,CAND;;AAQAK,MAAM,CAACC,OAAP,GAAiBH,QAAQ,CAACI,IAAT,IAAiB,SAASA,IAAT,CAAcC;AAAK;AAAnB,EAAoC;AACpE,MAAIC,EAAE,GAAGnB,SAAS,CAAC,IAAD,CAAlB;AACA,MAAIoB,QAAQ,GAAGhB,UAAU,CAACiB,IAAX,CAAgBC,SAAhB,EAA2B,CAA3B,CAAf;;AACA,MAAIC,KAAK,GAAG;AAAU;AAAe;AACnC,QAAIb,IAAI,GAAGU,QAAQ,CAACI,MAAT,CAAgBpB,UAAU,CAACiB,IAAX,CAAgBC,SAAhB,CAAhB,CAAX;AACA,WAAO,gBAAgBC,KAAhB,GAAwBhB,SAAS,CAACY,EAAD,EAAKT,IAAI,CAACe,MAAV,EAAkBf,IAAlB,CAAjC,GAA2DP,MAAM,CAACgB,EAAD,EAAKT,IAAL,EAAWQ,IAAX,CAAxE;AACD,GAHD;;AAIA,MAAIhB,QAAQ,CAACiB,EAAE,CAACO,SAAJ,CAAZ,EAA4BH,KAAK,CAACG,SAAN,GAAkBP,EAAE,CAACO,SAArB;AAC5B,SAAOH,KAAP;AACD,CATD","sourcesContent":["'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n"]},"metadata":{},"sourceType":"script"}