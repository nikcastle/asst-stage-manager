{"ast":null,"code":"'use strict';\n\nrequire('./es6.regexp.flags');\n\nvar anObject = require('./_an-object');\n\nvar $flags = require('./_flags');\n\nvar DESCRIPTORS = require('./_descriptors');\n\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n}; // 21.2.5.14 RegExp.prototype.toString()\n\n\nif (require('./_fails')(function () {\n  return $toString.call({\n    source: 'a',\n    flags: 'b'\n  }) != '/a/b';\n})) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/', 'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  }); // FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/babel-polyfill/node_modules/core-js/modules/es6.regexp.to-string.js"],"names":["require","anObject","$flags","DESCRIPTORS","TO_STRING","$toString","define","fn","RegExp","prototype","call","source","flags","toString","R","concat","undefined","name"],"mappings":"AAAA;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAII,SAAS,GAAG,UAAhB;AACA,IAAIC,SAAS,GAAG,IAAID,SAAJ,CAAhB;;AAEA,IAAIE,MAAM,GAAG,UAAUC,EAAV,EAAc;AACzBP,EAAAA,OAAO,CAAC,aAAD,CAAP,CAAuBQ,MAAM,CAACC,SAA9B,EAAyCL,SAAzC,EAAoDG,EAApD,EAAwD,IAAxD;AACD,CAFD,C,CAIA;;;AACA,IAAIP,OAAO,CAAC,UAAD,CAAP,CAAoB,YAAY;AAAE,SAAOK,SAAS,CAACK,IAAV,CAAe;AAAEC,IAAAA,MAAM,EAAE,GAAV;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAAf,KAA+C,MAAtD;AAA+D,CAAjG,CAAJ,EAAwG;AACtGN,EAAAA,MAAM,CAAC,SAASO,QAAT,GAAoB;AACzB,QAAIC,CAAC,GAAGb,QAAQ,CAAC,IAAD,CAAhB;AACA,WAAO,IAAIc,MAAJ,CAAWD,CAAC,CAACH,MAAb,EAAqB,GAArB,EACL,WAAWG,CAAX,GAAeA,CAAC,CAACF,KAAjB,GAAyB,CAACT,WAAD,IAAgBW,CAAC,YAAYN,MAA7B,GAAsCN,MAAM,CAACQ,IAAP,CAAYI,CAAZ,CAAtC,GAAuDE,SAD3E,CAAP;AAED,GAJK,CAAN,CADsG,CAMxG;AACC,CAPD,MAOO,IAAIX,SAAS,CAACY,IAAV,IAAkBb,SAAtB,EAAiC;AACtCE,EAAAA,MAAM,CAAC,SAASO,QAAT,GAAoB;AACzB,WAAOR,SAAS,CAACK,IAAV,CAAe,IAAf,CAAP;AACD,GAFK,CAAN;AAGD","sourcesContent":["'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n"]},"metadata":{},"sourceType":"script"}