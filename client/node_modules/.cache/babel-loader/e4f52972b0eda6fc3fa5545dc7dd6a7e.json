{"ast":null,"code":"'use strict'; // https://tc39.github.io/String.prototype.matchAll/\n\nvar $export = require('./_export');\n\nvar defined = require('./_defined');\n\nvar toLength = require('./_to-length');\n\nvar isRegExp = require('./_is-regexp');\n\nvar getFlags = require('./_flags');\n\nvar RegExpProto = RegExp.prototype;\n\nvar $RegExpStringIterator = function (regexp, string) {\n  this._r = regexp;\n  this._s = string;\n};\n\nrequire('./_iter-create')($RegExpStringIterator, 'RegExp String', function next() {\n  var match = this._r.exec(this._s);\n\n  return {\n    value: match,\n    done: match === null\n  };\n});\n\n$export($export.P, 'String', {\n  matchAll: function matchAll(regexp) {\n    defined(this);\n    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');\n    var S = String(this);\n    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);\n    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);\n    rx.lastIndex = toLength(regexp.lastIndex);\n    return new $RegExpStringIterator(rx, S);\n  }\n});","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/babel-polyfill/node_modules/core-js/modules/es7.string.match-all.js"],"names":["$export","require","defined","toLength","isRegExp","getFlags","RegExpProto","RegExp","prototype","$RegExpStringIterator","regexp","string","_r","_s","next","match","exec","value","done","P","matchAll","TypeError","S","String","flags","call","rx","source","indexOf","lastIndex"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,YAAD,CAArB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIK,WAAW,GAAGC,MAAM,CAACC,SAAzB;;AAEA,IAAIC,qBAAqB,GAAG,UAAUC,MAAV,EAAkBC,MAAlB,EAA0B;AACpD,OAAKC,EAAL,GAAUF,MAAV;AACA,OAAKG,EAAL,GAAUF,MAAV;AACD,CAHD;;AAKAV,OAAO,CAAC,gBAAD,CAAP,CAA0BQ,qBAA1B,EAAiD,eAAjD,EAAkE,SAASK,IAAT,GAAgB;AAChF,MAAIC,KAAK,GAAG,KAAKH,EAAL,CAAQI,IAAR,CAAa,KAAKH,EAAlB,CAAZ;;AACA,SAAO;AAAEI,IAAAA,KAAK,EAAEF,KAAT;AAAgBG,IAAAA,IAAI,EAAEH,KAAK,KAAK;AAAhC,GAAP;AACD,CAHD;;AAKAf,OAAO,CAACA,OAAO,CAACmB,CAAT,EAAY,QAAZ,EAAsB;AAC3BC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBV,MAAlB,EAA0B;AAClCR,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,QAAI,CAACE,QAAQ,CAACM,MAAD,CAAb,EAAuB,MAAMW,SAAS,CAACX,MAAM,GAAG,mBAAV,CAAf;AACvB,QAAIY,CAAC,GAAGC,MAAM,CAAC,IAAD,CAAd;AACA,QAAIC,KAAK,GAAG,WAAWlB,WAAX,GAAyBiB,MAAM,CAACb,MAAM,CAACc,KAAR,CAA/B,GAAgDnB,QAAQ,CAACoB,IAAT,CAAcf,MAAd,CAA5D;AACA,QAAIgB,EAAE,GAAG,IAAInB,MAAJ,CAAWG,MAAM,CAACiB,MAAlB,EAA0B,CAACH,KAAK,CAACI,OAAN,CAAc,GAAd,CAAD,GAAsBJ,KAAtB,GAA8B,MAAMA,KAA9D,CAAT;AACAE,IAAAA,EAAE,CAACG,SAAH,GAAe1B,QAAQ,CAACO,MAAM,CAACmB,SAAR,CAAvB;AACA,WAAO,IAAIpB,qBAAJ,CAA0BiB,EAA1B,EAA8BJ,CAA9B,CAAP;AACD;AAT0B,CAAtB,CAAP","sourcesContent":["'use strict';\n// https://tc39.github.io/String.prototype.matchAll/\nvar $export = require('./_export');\nvar defined = require('./_defined');\nvar toLength = require('./_to-length');\nvar isRegExp = require('./_is-regexp');\nvar getFlags = require('./_flags');\nvar RegExpProto = RegExp.prototype;\n\nvar $RegExpStringIterator = function (regexp, string) {\n  this._r = regexp;\n  this._s = string;\n};\n\nrequire('./_iter-create')($RegExpStringIterator, 'RegExp String', function next() {\n  var match = this._r.exec(this._s);\n  return { value: match, done: match === null };\n});\n\n$export($export.P, 'String', {\n  matchAll: function matchAll(regexp) {\n    defined(this);\n    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');\n    var S = String(this);\n    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);\n    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);\n    rx.lastIndex = toLength(regexp.lastIndex);\n    return new $RegExpStringIterator(rx, S);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}