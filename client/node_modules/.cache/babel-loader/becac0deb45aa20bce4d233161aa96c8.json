{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport uncontrollable from 'uncontrollable';\nimport warning from 'warning';\nimport { bsStyles, bsClass, getClassSet, splitBsPropsAndOmit } from './utils/bootstrapUtils';\nimport { State, Style } from './utils/StyleConfig';\nimport Body from './PanelBody';\nimport Heading from './PanelHeading';\nimport Title from './PanelTitle';\nimport Footer from './PanelFooter';\nimport Toggle from './PanelToggle';\nimport Collapse from './PanelCollapse';\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaultGetId = function defaultGetId(id, type) {\n  return id ? id + \"--\" + type : null;\n};\n\nvar propTypes = {\n  /**\n   * Controls the collapsed/expanded state ofthe Panel. Requires\n   * a `Panel.Collapse` or `<Panel.Body collapsible>` child component\n   * in order to actually animate out or in.\n   *\n   * @controllable onToggle\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * A callback fired when the collapse state changes.\n   *\n   * @controllable expanded\n   */\n  onToggle: PropTypes.func,\n  eventKey: PropTypes.any,\n\n  /**\n   * An HTML `id` attribute uniquely identifying the Panel component.\n   */\n  id: PropTypes.string\n};\nvar contextTypes = {\n  $bs_panelGroup: PropTypes.shape({\n    getId: PropTypes.func,\n    activeKey: PropTypes.any,\n    onToggle: PropTypes.func\n  })\n};\nvar childContextTypes = {\n  $bs_panel: PropTypes.shape({\n    headingId: PropTypes.string,\n    bodyId: PropTypes.string,\n    bsClass: PropTypes.string,\n    onToggle: PropTypes.func,\n    expanded: PropTypes.bool\n  })\n};\n\nvar Panel = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Panel, _React$Component);\n\n  function Panel() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleToggle = function (e) {\n      var panelGroup = _this.context.$bs_panelGroup;\n      var expanded = !_this.getExpanded();\n\n      if (panelGroup && panelGroup.onToggle) {\n        panelGroup.onToggle(_this.props.eventKey, expanded, e);\n      } else {\n        _this.props.onToggle(expanded, e);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = Panel.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    var _this$props = this.props,\n        eventKey = _this$props.eventKey,\n        id = _this$props.id;\n    var idKey = eventKey == null ? id : eventKey;\n    var ids;\n\n    if (idKey !== null) {\n      var panelGroup = this.context.$bs_panelGroup;\n      var getId = panelGroup && panelGroup.getId || defaultGetId;\n      ids = {\n        headingId: getId(idKey, 'heading'),\n        bodyId: getId(idKey, 'body')\n      };\n    }\n\n    return {\n      $bs_panel: _extends({}, ids, {\n        bsClass: this.props.bsClass,\n        expanded: this.getExpanded(),\n        onToggle: this.handleToggle\n      })\n    };\n  };\n\n  _proto.getExpanded = function getExpanded() {\n    var panelGroup = this.context.$bs_panelGroup;\n\n    if (panelGroup && has.call(panelGroup, 'activeKey')) {\n      process.env.NODE_ENV !== \"production\" ? warning(this.props.expanded == null, 'Specifying `<Panel>` `expanded` in the context of an accordion ' + '`<PanelGroup>` is not supported. Set `activeKey` on the ' + '`<PanelGroup>` instead.') : void 0;\n      return panelGroup.activeKey === this.props.eventKey;\n    }\n\n    return !!this.props.expanded;\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        className = _this$props2.className,\n        children = _this$props2.children;\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(this.props, ['onToggle', 'eventKey', 'expanded']),\n        bsProps = _splitBsPropsAndOmit[0],\n        props = _splitBsPropsAndOmit[1];\n\n    return React.createElement(\"div\", _extends({}, props, {\n      className: classNames(className, getClassSet(bsProps))\n    }), children);\n  };\n\n  return Panel;\n}(React.Component);\n\nPanel.propTypes = propTypes;\nPanel.contextTypes = contextTypes;\nPanel.childContextTypes = childContextTypes;\nvar UncontrolledPanel = uncontrollable(bsClass('panel', bsStyles(_Object$values(State).concat([Style.DEFAULT, Style.PRIMARY]), Style.DEFAULT, Panel)), {\n  expanded: 'onToggle'\n});\n\n_Object$assign(UncontrolledPanel, {\n  Heading: Heading,\n  Title: Title,\n  Body: Body,\n  Footer: Footer,\n  Toggle: Toggle,\n  Collapse: Collapse\n});\n\nexport default UncontrolledPanel;","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/react-bootstrap/es/Panel.js"],"names":["_Object$assign","_Object$values","_extends","_inheritsLoose","classNames","PropTypes","React","uncontrollable","warning","bsStyles","bsClass","getClassSet","splitBsPropsAndOmit","State","Style","Body","Heading","Title","Footer","Toggle","Collapse","has","Object","prototype","hasOwnProperty","defaultGetId","id","type","propTypes","expanded","bool","onToggle","func","eventKey","any","string","contextTypes","$bs_panelGroup","shape","getId","activeKey","childContextTypes","$bs_panel","headingId","bodyId","Panel","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","handleToggle","e","panelGroup","context","getExpanded","props","_proto","getChildContext","_this$props","idKey","ids","process","env","NODE_ENV","render","_this$props2","className","children","_splitBsPropsAndOmit","bsProps","createElement","Component","UncontrolledPanel","DEFAULT","PRIMARY"],"mappings":"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","sourcesContent":["import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport uncontrollable from 'uncontrollable';\nimport warning from 'warning';\nimport { bsStyles, bsClass, getClassSet, splitBsPropsAndOmit } from './utils/bootstrapUtils';\nimport { State, Style } from './utils/StyleConfig';\nimport Body from './PanelBody';\nimport Heading from './PanelHeading';\nimport Title from './PanelTitle';\nimport Footer from './PanelFooter';\nimport Toggle from './PanelToggle';\nimport Collapse from './PanelCollapse';\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaultGetId = function defaultGetId(id, type) {\n  return id ? id + \"--\" + type : null;\n};\n\nvar propTypes = {\n  /**\n   * Controls the collapsed/expanded state ofthe Panel. Requires\n   * a `Panel.Collapse` or `<Panel.Body collapsible>` child component\n   * in order to actually animate out or in.\n   *\n   * @controllable onToggle\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * A callback fired when the collapse state changes.\n   *\n   * @controllable expanded\n   */\n  onToggle: PropTypes.func,\n  eventKey: PropTypes.any,\n\n  /**\n   * An HTML `id` attribute uniquely identifying the Panel component.\n   */\n  id: PropTypes.string\n};\nvar contextTypes = {\n  $bs_panelGroup: PropTypes.shape({\n    getId: PropTypes.func,\n    activeKey: PropTypes.any,\n    onToggle: PropTypes.func\n  })\n};\nvar childContextTypes = {\n  $bs_panel: PropTypes.shape({\n    headingId: PropTypes.string,\n    bodyId: PropTypes.string,\n    bsClass: PropTypes.string,\n    onToggle: PropTypes.func,\n    expanded: PropTypes.bool\n  })\n};\n\nvar Panel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Panel, _React$Component);\n\n  function Panel() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleToggle = function (e) {\n      var panelGroup = _this.context.$bs_panelGroup;\n      var expanded = !_this.getExpanded();\n\n      if (panelGroup && panelGroup.onToggle) {\n        panelGroup.onToggle(_this.props.eventKey, expanded, e);\n      } else {\n        _this.props.onToggle(expanded, e);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = Panel.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    var _this$props = this.props,\n        eventKey = _this$props.eventKey,\n        id = _this$props.id;\n    var idKey = eventKey == null ? id : eventKey;\n    var ids;\n\n    if (idKey !== null) {\n      var panelGroup = this.context.$bs_panelGroup;\n      var getId = panelGroup && panelGroup.getId || defaultGetId;\n      ids = {\n        headingId: getId(idKey, 'heading'),\n        bodyId: getId(idKey, 'body')\n      };\n    }\n\n    return {\n      $bs_panel: _extends({}, ids, {\n        bsClass: this.props.bsClass,\n        expanded: this.getExpanded(),\n        onToggle: this.handleToggle\n      })\n    };\n  };\n\n  _proto.getExpanded = function getExpanded() {\n    var panelGroup = this.context.$bs_panelGroup;\n\n    if (panelGroup && has.call(panelGroup, 'activeKey')) {\n      process.env.NODE_ENV !== \"production\" ? warning(this.props.expanded == null, 'Specifying `<Panel>` `expanded` in the context of an accordion ' + '`<PanelGroup>` is not supported. Set `activeKey` on the ' + '`<PanelGroup>` instead.') : void 0;\n      return panelGroup.activeKey === this.props.eventKey;\n    }\n\n    return !!this.props.expanded;\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        className = _this$props2.className,\n        children = _this$props2.children;\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(this.props, ['onToggle', 'eventKey', 'expanded']),\n        bsProps = _splitBsPropsAndOmit[0],\n        props = _splitBsPropsAndOmit[1];\n\n    return React.createElement(\"div\", _extends({}, props, {\n      className: classNames(className, getClassSet(bsProps))\n    }), children);\n  };\n\n  return Panel;\n}(React.Component);\n\nPanel.propTypes = propTypes;\nPanel.contextTypes = contextTypes;\nPanel.childContextTypes = childContextTypes;\nvar UncontrolledPanel = uncontrollable(bsClass('panel', bsStyles(_Object$values(State).concat([Style.DEFAULT, Style.PRIMARY]), Style.DEFAULT, Panel)), {\n  expanded: 'onToggle'\n});\n\n_Object$assign(UncontrolledPanel, {\n  Heading: Heading,\n  Title: Title,\n  Body: Body,\n  Footer: Footer,\n  Toggle: Toggle,\n  Collapse: Collapse\n});\n\nexport default UncontrolledPanel;"]},"metadata":{},"sourceType":"module"}