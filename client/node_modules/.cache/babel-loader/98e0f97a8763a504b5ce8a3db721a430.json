{"ast":null,"code":"'use strict';\n\nvar hasSymbols = require('has-symbols')();\n\nvar hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';\nvar hasOwnProperty;\nvar regexExec;\nvar isRegexMarker;\nvar badStringifier;\n\nif (hasToStringTag) {\n  hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n  regexExec = Function.call.bind(RegExp.prototype.exec);\n  isRegexMarker = {};\n\n  var throwRegexMarker = function () {\n    throw isRegexMarker;\n  };\n\n  badStringifier = {\n    toString: throwRegexMarker,\n    valueOf: throwRegexMarker\n  };\n\n  if (typeof Symbol.toPrimitive === 'symbol') {\n    badStringifier[Symbol.toPrimitive] = throwRegexMarker;\n  }\n}\n\nvar toStr = Object.prototype.toString;\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar regexClass = '[object RegExp]';\nmodule.exports = hasToStringTag // eslint-disable-next-line consistent-return\n? function isRegex(value) {\n  if (!value || typeof value !== 'object') {\n    return false;\n  }\n\n  var descriptor = gOPD(value, 'lastIndex');\n  var hasLastIndexDataProperty = descriptor && hasOwnProperty(descriptor, 'value');\n\n  if (!hasLastIndexDataProperty) {\n    return false;\n  }\n\n  try {\n    regexExec(value, badStringifier);\n  } catch (e) {\n    return e === isRegexMarker;\n  }\n} : function isRegex(value) {\n  // In older browsers, typeof regex incorrectly returns 'function'\n  if (!value || typeof value !== 'object' && typeof value !== 'function') {\n    return false;\n  }\n\n  return toStr.call(value) === regexClass;\n};","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/is-regex/index.js"],"names":["hasSymbols","require","hasToStringTag","Symbol","toStringTag","hasOwnProperty","regexExec","isRegexMarker","badStringifier","Function","call","bind","Object","prototype","RegExp","exec","throwRegexMarker","toString","valueOf","toPrimitive","toStr","gOPD","getOwnPropertyDescriptor","regexClass","module","exports","isRegex","value","descriptor","hasLastIndexDataProperty","e"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAP,EAAjB;;AACA,IAAIC,cAAc,GAAGF,UAAU,IAAI,OAAOG,MAAM,CAACC,WAAd,KAA8B,QAAjE;AACA,IAAIC,cAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,aAAJ;AACA,IAAIC,cAAJ;;AAEA,IAAIN,cAAJ,EAAoB;AACnBG,EAAAA,cAAc,GAAGI,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmBC,MAAM,CAACC,SAAP,CAAiBR,cAApC,CAAjB;AACAC,EAAAA,SAAS,GAAGG,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmBG,MAAM,CAACD,SAAP,CAAiBE,IAApC,CAAZ;AACAR,EAAAA,aAAa,GAAG,EAAhB;;AAEA,MAAIS,gBAAgB,GAAG,YAAY;AAClC,UAAMT,aAAN;AACA,GAFD;;AAGAC,EAAAA,cAAc,GAAG;AAChBS,IAAAA,QAAQ,EAAED,gBADM;AAEhBE,IAAAA,OAAO,EAAEF;AAFO,GAAjB;;AAKA,MAAI,OAAOb,MAAM,CAACgB,WAAd,KAA8B,QAAlC,EAA4C;AAC3CX,IAAAA,cAAc,CAACL,MAAM,CAACgB,WAAR,CAAd,GAAqCH,gBAArC;AACA;AACD;;AAED,IAAII,KAAK,GAAGR,MAAM,CAACC,SAAP,CAAiBI,QAA7B;AACA,IAAII,IAAI,GAAGT,MAAM,CAACU,wBAAlB;AACA,IAAIC,UAAU,GAAG,iBAAjB;AAEAC,MAAM,CAACC,OAAP,GAAiBvB,cAAc,CAC9B;AAD8B,EAE5B,SAASwB,OAAT,CAAiBC,KAAjB,EAAwB;AACzB,MAAI,CAACA,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EAAyC;AACxC,WAAO,KAAP;AACA;;AAED,MAAIC,UAAU,GAAGP,IAAI,CAACM,KAAD,EAAQ,WAAR,CAArB;AACA,MAAIE,wBAAwB,GAAGD,UAAU,IAAIvB,cAAc,CAACuB,UAAD,EAAa,OAAb,CAA3D;;AACA,MAAI,CAACC,wBAAL,EAA+B;AAC9B,WAAO,KAAP;AACA;;AAED,MAAI;AACHvB,IAAAA,SAAS,CAACqB,KAAD,EAAQnB,cAAR,CAAT;AACA,GAFD,CAEE,OAAOsB,CAAP,EAAU;AACX,WAAOA,CAAC,KAAKvB,aAAb;AACA;AACD,CAlB6B,GAmB5B,SAASmB,OAAT,CAAiBC,KAAjB,EAAwB;AACzB;AACA,MAAI,CAACA,KAAD,IAAW,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,UAA7D,EAA0E;AACzE,WAAO,KAAP;AACA;;AAED,SAAOP,KAAK,CAACV,IAAN,CAAWiB,KAAX,MAAsBJ,UAA7B;AACA,CA1BF","sourcesContent":["'use strict';\n\nvar hasSymbols = require('has-symbols')();\nvar hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';\nvar hasOwnProperty;\nvar regexExec;\nvar isRegexMarker;\nvar badStringifier;\n\nif (hasToStringTag) {\n\thasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n\tregexExec = Function.call.bind(RegExp.prototype.exec);\n\tisRegexMarker = {};\n\n\tvar throwRegexMarker = function () {\n\t\tthrow isRegexMarker;\n\t};\n\tbadStringifier = {\n\t\ttoString: throwRegexMarker,\n\t\tvalueOf: throwRegexMarker\n\t};\n\n\tif (typeof Symbol.toPrimitive === 'symbol') {\n\t\tbadStringifier[Symbol.toPrimitive] = throwRegexMarker;\n\t}\n}\n\nvar toStr = Object.prototype.toString;\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar regexClass = '[object RegExp]';\n\nmodule.exports = hasToStringTag\n\t// eslint-disable-next-line consistent-return\n\t? function isRegex(value) {\n\t\tif (!value || typeof value !== 'object') {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar descriptor = gOPD(value, 'lastIndex');\n\t\tvar hasLastIndexDataProperty = descriptor && hasOwnProperty(descriptor, 'value');\n\t\tif (!hasLastIndexDataProperty) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tregexExec(value, badStringifier);\n\t\t} catch (e) {\n\t\t\treturn e === isRegexMarker;\n\t\t}\n\t}\n\t: function isRegex(value) {\n\t\t// In older browsers, typeof regex incorrectly returns 'function'\n\t\tif (!value || (typeof value !== 'object' && typeof value !== 'function')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn toStr.call(value) === regexClass;\n\t};\n"]},"metadata":{},"sourceType":"script"}