{"ast":null,"code":"var _jsxFileName = \"/Users/nikkicastle/Desktop/code/asst-stage-manager/client/src/components/Notes.js\";\nimport React, { useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport styled from \"styled-components\";\nimport Calendar from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css';\nimport { Button, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport AddProduction from \"../components/addProduction\";\nimport API from \"../utils/API\";\nconst StyleWrapper = styled.div`\n    margin: 0 50px;\n    h1 {\n        color:  #451814;\n        justify-content: center;\n        margin-top: 150px;\n        text-align: center;\n    }\n    body {\n        justify-content: center;\n        text-align: center;\n    }\n    .calendar {\n        border: 10px solid #dfc140;\n        border-radius: 10px;\n        margin: auto;\n        margin-bottom: 50px;\n    }\n    h2 {\n        color: #a95534\n        margin-top: 30px;\n    }\n    .dropdown {\n        margin: 20px;\n    }\n    .upload {\n        align-items: center;\n        justify-content: center;\n        margin: auto;\n        text-align: center;\n    }\n`;\n\nconst handleFormSubmit = () => {};\n\nconst Notes = () => {\n  const {\n    isAuthenticated\n  } = useAuth0;\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  const [note, setNote] = useState({\n    title: \"\",\n    text: \"\",\n    date: \"\",\n    production: \"\"\n  });\n  return /*#__PURE__*/React.createElement(StyleWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Rehearsal Notes\")), /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Select your rehearsal date\"), /*#__PURE__*/React.createElement(Calendar, {\n    className: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, isAuthenticated ? /*#__PURE__*/React.createElement(Dropdown, {\n    group: true,\n    isOpen: dropdownOpen,\n    size: \"md\",\n    toggle: toggle,\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    caret: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"Select a production from your list\"), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, \"Another Action\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, \"Another Action\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, \"Another Action\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"Another Action\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Note Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"text\",\n    id: \"exampleText\",\n    placeholder: \"Note Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    name: \"file\",\n    id: \"exampleFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(FormText, {\n    color: \"muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }\n  }, \"Upload your script copy to save an electronic version\")))));\n};\n\nexport default Notes;","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/src/components/Notes.js"],"names":["React","useState","useAuth0","styled","Calendar","Button","Dropdown","DropdownItem","DropdownMenu","DropdownToggle","Form","FormGroup","Label","Input","FormText","AddProduction","API","StyleWrapper","div","handleFormSubmit","Notes","isAuthenticated","dropdownOpen","setDropdownOpen","toggle","prevState","note","setNote","title","text","date","production"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport styled from \"styled-components\";\nimport Calendar from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css';\nimport { Button, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Form, FormGroup, Label, Input, FormText } from \"reactstrap\"\nimport AddProduction from \"../components/addProduction\";\nimport API from \"../utils/API\";\n\n\nconst StyleWrapper = styled.div`\n    margin: 0 50px;\n    h1 {\n        color:  #451814;\n        justify-content: center;\n        margin-top: 150px;\n        text-align: center;\n    }\n    body {\n        justify-content: center;\n        text-align: center;\n    }\n    .calendar {\n        border: 10px solid #dfc140;\n        border-radius: 10px;\n        margin: auto;\n        margin-bottom: 50px;\n    }\n    h2 {\n        color: #a95534\n        margin-top: 30px;\n    }\n    .dropdown {\n        margin: 20px;\n    }\n    .upload {\n        align-items: center;\n        justify-content: center;\n        margin: auto;\n        text-align: center;\n    }\n`\n\nconst handleFormSubmit = () => {\n\n}\n\nconst Notes = () => {\n\n    const { isAuthenticated } = useAuth0;\n\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    const toggle = () => setDropdownOpen(prevState => !prevState)\n\n    const [note, setNote] = useState({\n        title: \"\",\n        text: \"\",\n        date: \"\",\n        production: \"\"\n    });\n\n   return (\n       <StyleWrapper>\n           <header className=\"App-header\">\n              \n              <h1 className=\"header\">\n              Rehearsal Notes\n              </h1>\n          </header>\n          <body>\n              <p>Select your rehearsal date</p>\n              <Calendar className=\"calendar\"/>\n              <Form>\n                  {isAuthenticated ? (\n                      \n                    <Dropdown \n                    group isOpen={dropdownOpen} \n                    size=\"md\" \n                    toggle={toggle}\n                    className=\"dropdown\"\n                    >\n                        <DropdownToggle caret>\n                            Select a production from your list\n                        </DropdownToggle>\n                        <DropdownMenu>\n                            <DropdownItem>Another Action</DropdownItem>\n                            <DropdownItem>Another Action</DropdownItem>\n                            <DropdownItem>Another Action</DropdownItem>\n                            <DropdownItem>Another Action</DropdownItem>\n                        </DropdownMenu>\n                    </Dropdown>\n\n                  ) : <div></div>}\n              {/* <h2>Enter your rehearsal notes here</h2> */}\n                  <FormGroup>\n                      <Input type=\"text\" placeholder=\"Note Title\"/>\n                  </FormGroup>\n                  <FormGroup>\n                      <Input type=\"textarea\" name=\"text\" id=\"exampleText\" placeholder=\"Note Text\"/>\n                  </FormGroup>\n                      <Button\n                      onClick={handleFormSubmit}\n                      >Submit\n                      </Button>\n                  <FormGroup className=\"upload\">\n                      {/* <Label for=\"exampleFile\">File</Label> */}\n                      <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n                      <FormText color=\"muted\">\n                      Upload your script copy to save an electronic version\n                      </FormText>\n                  </FormGroup>\n              </Form>\n          </body>\n       </StyleWrapper>\n   )\n    \n}\n\nexport default Notes;"]},"metadata":{},"sourceType":"module"}