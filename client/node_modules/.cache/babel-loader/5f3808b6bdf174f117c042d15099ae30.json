{"ast":null,"code":"'use strict'; // https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\n\nvar isArray = require('./_is-array');\n\nvar isObject = require('./_is-object');\n\nvar toLength = require('./_to-length');\n\nvar ctx = require('./_ctx');\n\nvar IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');\n\nfunction flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;\n  var element, spreadable;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n      spreadable = false;\n\n      if (isObject(element)) {\n        spreadable = element[IS_CONCAT_SPREADABLE];\n        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);\n      }\n\n      if (spreadable && depth > 0) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1fffffffffffff) throw TypeError();\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n\n    sourceIndex++;\n  }\n\n  return targetIndex;\n}\n\nmodule.exports = flattenIntoArray;","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/babel-polyfill/node_modules/core-js/modules/_flatten-into-array.js"],"names":["isArray","require","isObject","toLength","ctx","IS_CONCAT_SPREADABLE","flattenIntoArray","target","original","source","sourceLen","start","depth","mapper","thisArg","targetIndex","sourceIndex","mapFn","element","spreadable","undefined","length","TypeError","module","exports"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,aAAD,CAArB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAII,oBAAoB,GAAGJ,OAAO,CAAC,QAAD,CAAP,CAAkB,oBAAlB,CAA3B;;AAEA,SAASK,gBAAT,CAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,MAA5C,EAAoDC,SAApD,EAA+DC,KAA/D,EAAsEC,KAAtE,EAA6EC,MAA7E,EAAqFC,OAArF,EAA8F;AAC5F,MAAIC,WAAW,GAAGJ,KAAlB;AACA,MAAIK,WAAW,GAAG,CAAlB;AACA,MAAIC,KAAK,GAAGJ,MAAM,GAAGT,GAAG,CAACS,MAAD,EAASC,OAAT,EAAkB,CAAlB,CAAN,GAA6B,KAA/C;AACA,MAAII,OAAJ,EAAaC,UAAb;;AAEA,SAAOH,WAAW,GAAGN,SAArB,EAAgC;AAC9B,QAAIM,WAAW,IAAIP,MAAnB,EAA2B;AACzBS,MAAAA,OAAO,GAAGD,KAAK,GAAGA,KAAK,CAACR,MAAM,CAACO,WAAD,CAAP,EAAsBA,WAAtB,EAAmCR,QAAnC,CAAR,GAAuDC,MAAM,CAACO,WAAD,CAA5E;AAEAG,MAAAA,UAAU,GAAG,KAAb;;AACA,UAAIjB,QAAQ,CAACgB,OAAD,CAAZ,EAAuB;AACrBC,QAAAA,UAAU,GAAGD,OAAO,CAACb,oBAAD,CAApB;AACAc,QAAAA,UAAU,GAAGA,UAAU,KAAKC,SAAf,GAA2B,CAAC,CAACD,UAA7B,GAA0CnB,OAAO,CAACkB,OAAD,CAA9D;AACD;;AAED,UAAIC,UAAU,IAAIP,KAAK,GAAG,CAA1B,EAA6B;AAC3BG,QAAAA,WAAW,GAAGT,gBAAgB,CAACC,MAAD,EAASC,QAAT,EAAmBU,OAAnB,EAA4Bf,QAAQ,CAACe,OAAO,CAACG,MAAT,CAApC,EAAsDN,WAAtD,EAAmEH,KAAK,GAAG,CAA3E,CAAhB,GAAgG,CAA9G;AACD,OAFD,MAEO;AACL,YAAIG,WAAW,IAAI,gBAAnB,EAAqC,MAAMO,SAAS,EAAf;AACrCf,QAAAA,MAAM,CAACQ,WAAD,CAAN,GAAsBG,OAAtB;AACD;;AAEDH,MAAAA,WAAW;AACZ;;AACDC,IAAAA,WAAW;AACZ;;AACD,SAAOD,WAAP;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBlB,gBAAjB","sourcesContent":["'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar isArray = require('./_is-array');\nvar isObject = require('./_is-object');\nvar toLength = require('./_to-length');\nvar ctx = require('./_ctx');\nvar IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');\n\nfunction flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;\n  var element, spreadable;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      spreadable = false;\n      if (isObject(element)) {\n        spreadable = element[IS_CONCAT_SPREADABLE];\n        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);\n      }\n\n      if (spreadable && depth > 0) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1fffffffffffff) throw TypeError();\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n}\n\nmodule.exports = flattenIntoArray;\n"]},"metadata":{},"sourceType":"script"}