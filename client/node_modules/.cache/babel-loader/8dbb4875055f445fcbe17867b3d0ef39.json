{"ast":null,"code":"import _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\"; // TODO: The publicly exposed parts of this should be in lib/BootstrapUtils.\n\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport { SIZE_MAP } from './StyleConfig';\n\nfunction curry(fn) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var last = args[args.length - 1];\n\n    if (typeof last === 'function') {\n      return fn.apply(void 0, args);\n    }\n\n    return function (Component) {\n      return fn.apply(void 0, args.concat([Component]));\n    };\n  };\n}\n\nexport function prefix(props, variant) {\n  var bsClass = (props.bsClass || '').trim();\n  !(bsClass != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `bsClass` prop is required for this component') : invariant(false) : void 0;\n  return bsClass + (variant ? \"-\" + variant : '');\n}\nexport var bsClass = curry(function (defaultClass, Component) {\n  var propTypes = Component.propTypes || (Component.propTypes = {});\n  var defaultProps = Component.defaultProps || (Component.defaultProps = {});\n  propTypes.bsClass = PropTypes.string;\n  defaultProps.bsClass = defaultClass;\n  return Component;\n});\nexport var bsStyles = curry(function (styles, defaultStyle, Component) {\n  if (typeof defaultStyle !== 'string') {\n    Component = defaultStyle;\n    defaultStyle = undefined;\n  }\n\n  var existing = Component.STYLES || [];\n  var propTypes = Component.propTypes || {};\n  styles.forEach(function (style) {\n    if (existing.indexOf(style) === -1) {\n      existing.push(style);\n    }\n  });\n  var propType = PropTypes.oneOf(existing); // expose the values on the propType function for documentation\n\n  Component.STYLES = existing;\n  propType._values = existing;\n  Component.propTypes = _extends({}, propTypes, {\n    bsStyle: propType\n  });\n\n  if (defaultStyle !== undefined) {\n    var defaultProps = Component.defaultProps || (Component.defaultProps = {});\n    defaultProps.bsStyle = defaultStyle;\n  }\n\n  return Component;\n});\nexport var bsSizes = curry(function (sizes, defaultSize, Component) {\n  if (typeof defaultSize !== 'string') {\n    Component = defaultSize;\n    defaultSize = undefined;\n  }\n\n  var existing = Component.SIZES || [];\n  var propTypes = Component.propTypes || {};\n  sizes.forEach(function (size) {\n    if (existing.indexOf(size) === -1) {\n      existing.push(size);\n    }\n  });\n  var values = [];\n  existing.forEach(function (size) {\n    var mappedSize = SIZE_MAP[size];\n\n    if (mappedSize && mappedSize !== size) {\n      values.push(mappedSize);\n    }\n\n    values.push(size);\n  });\n  var propType = PropTypes.oneOf(values);\n  propType._values = values; // expose the values on the propType function for documentation\n\n  Component.SIZES = existing;\n  Component.propTypes = _extends({}, propTypes, {\n    bsSize: propType\n  });\n\n  if (defaultSize !== undefined) {\n    if (!Component.defaultProps) {\n      Component.defaultProps = {};\n    }\n\n    Component.defaultProps.bsSize = defaultSize;\n  }\n\n  return Component;\n});\nexport function getClassSet(props) {\n  var _classes;\n\n  var classes = (_classes = {}, _classes[prefix(props)] = true, _classes);\n\n  if (props.bsSize) {\n    var bsSize = SIZE_MAP[props.bsSize] || props.bsSize;\n    classes[prefix(props, bsSize)] = true;\n  }\n\n  if (props.bsStyle) {\n    classes[prefix(props, props.bsStyle)] = true;\n  }\n\n  return classes;\n}\n\nfunction getBsProps(props) {\n  return {\n    bsClass: props.bsClass,\n    bsSize: props.bsSize,\n    bsStyle: props.bsStyle,\n    bsRole: props.bsRole\n  };\n}\n\nfunction isBsProp(propName) {\n  return propName === 'bsClass' || propName === 'bsSize' || propName === 'bsStyle' || propName === 'bsRole';\n}\n\nexport function splitBsProps(props) {\n  var elementProps = {};\n\n  _Object$entries(props).forEach(function (_ref) {\n    var propName = _ref[0],\n        propValue = _ref[1];\n\n    if (!isBsProp(propName)) {\n      elementProps[propName] = propValue;\n    }\n  });\n\n  return [getBsProps(props), elementProps];\n}\nexport function splitBsPropsAndOmit(props, omittedPropNames) {\n  var isOmittedProp = {};\n  omittedPropNames.forEach(function (propName) {\n    isOmittedProp[propName] = true;\n  });\n  var elementProps = {};\n\n  _Object$entries(props).forEach(function (_ref2) {\n    var propName = _ref2[0],\n        propValue = _ref2[1];\n\n    if (!isBsProp(propName) && !isOmittedProp[propName]) {\n      elementProps[propName] = propValue;\n    }\n  });\n\n  return [getBsProps(props), elementProps];\n}\n/**\n * Add a style variant to a Component. Mutates the propTypes of the component\n * in order to validate the new variant.\n */\n\nexport function addStyle(Component) {\n  for (var _len2 = arguments.length, styleVariant = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    styleVariant[_key2 - 1] = arguments[_key2];\n  }\n\n  bsStyles(styleVariant, Component);\n}\nexport var _curry = curry;","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/react-bootstrap/es/utils/bootstrapUtils.js"],"names":["_Object$entries","_extends","invariant","PropTypes","SIZE_MAP","curry","fn","_len","arguments","length","args","Array","_key","last","apply","Component","concat","prefix","props","variant","bsClass","trim","process","env","NODE_ENV","defaultClass","propTypes","defaultProps","string","bsStyles","styles","defaultStyle","undefined","existing","STYLES","forEach","style","indexOf","push","propType","oneOf","_values","bsStyle","bsSizes","sizes","defaultSize","SIZES","size","values","mappedSize","bsSize","getClassSet","_classes","classes","getBsProps","bsRole","isBsProp","propName","splitBsProps","elementProps","_ref","propValue","splitBsPropsAndOmit","omittedPropNames","isOmittedProp","_ref2","addStyle","_len2","styleVariant","_key2","_curry"],"mappings":"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","sourcesContent":["import _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\n// TODO: The publicly exposed parts of this should be in lib/BootstrapUtils.\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport { SIZE_MAP } from './StyleConfig';\n\nfunction curry(fn) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var last = args[args.length - 1];\n\n    if (typeof last === 'function') {\n      return fn.apply(void 0, args);\n    }\n\n    return function (Component) {\n      return fn.apply(void 0, args.concat([Component]));\n    };\n  };\n}\n\nexport function prefix(props, variant) {\n  var bsClass = (props.bsClass || '').trim();\n  !(bsClass != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `bsClass` prop is required for this component') : invariant(false) : void 0;\n  return bsClass + (variant ? \"-\" + variant : '');\n}\nexport var bsClass = curry(function (defaultClass, Component) {\n  var propTypes = Component.propTypes || (Component.propTypes = {});\n  var defaultProps = Component.defaultProps || (Component.defaultProps = {});\n  propTypes.bsClass = PropTypes.string;\n  defaultProps.bsClass = defaultClass;\n  return Component;\n});\nexport var bsStyles = curry(function (styles, defaultStyle, Component) {\n  if (typeof defaultStyle !== 'string') {\n    Component = defaultStyle;\n    defaultStyle = undefined;\n  }\n\n  var existing = Component.STYLES || [];\n  var propTypes = Component.propTypes || {};\n  styles.forEach(function (style) {\n    if (existing.indexOf(style) === -1) {\n      existing.push(style);\n    }\n  });\n  var propType = PropTypes.oneOf(existing); // expose the values on the propType function for documentation\n\n  Component.STYLES = existing;\n  propType._values = existing;\n  Component.propTypes = _extends({}, propTypes, {\n    bsStyle: propType\n  });\n\n  if (defaultStyle !== undefined) {\n    var defaultProps = Component.defaultProps || (Component.defaultProps = {});\n    defaultProps.bsStyle = defaultStyle;\n  }\n\n  return Component;\n});\nexport var bsSizes = curry(function (sizes, defaultSize, Component) {\n  if (typeof defaultSize !== 'string') {\n    Component = defaultSize;\n    defaultSize = undefined;\n  }\n\n  var existing = Component.SIZES || [];\n  var propTypes = Component.propTypes || {};\n  sizes.forEach(function (size) {\n    if (existing.indexOf(size) === -1) {\n      existing.push(size);\n    }\n  });\n  var values = [];\n  existing.forEach(function (size) {\n    var mappedSize = SIZE_MAP[size];\n\n    if (mappedSize && mappedSize !== size) {\n      values.push(mappedSize);\n    }\n\n    values.push(size);\n  });\n  var propType = PropTypes.oneOf(values);\n  propType._values = values; // expose the values on the propType function for documentation\n\n  Component.SIZES = existing;\n  Component.propTypes = _extends({}, propTypes, {\n    bsSize: propType\n  });\n\n  if (defaultSize !== undefined) {\n    if (!Component.defaultProps) {\n      Component.defaultProps = {};\n    }\n\n    Component.defaultProps.bsSize = defaultSize;\n  }\n\n  return Component;\n});\nexport function getClassSet(props) {\n  var _classes;\n\n  var classes = (_classes = {}, _classes[prefix(props)] = true, _classes);\n\n  if (props.bsSize) {\n    var bsSize = SIZE_MAP[props.bsSize] || props.bsSize;\n    classes[prefix(props, bsSize)] = true;\n  }\n\n  if (props.bsStyle) {\n    classes[prefix(props, props.bsStyle)] = true;\n  }\n\n  return classes;\n}\n\nfunction getBsProps(props) {\n  return {\n    bsClass: props.bsClass,\n    bsSize: props.bsSize,\n    bsStyle: props.bsStyle,\n    bsRole: props.bsRole\n  };\n}\n\nfunction isBsProp(propName) {\n  return propName === 'bsClass' || propName === 'bsSize' || propName === 'bsStyle' || propName === 'bsRole';\n}\n\nexport function splitBsProps(props) {\n  var elementProps = {};\n\n  _Object$entries(props).forEach(function (_ref) {\n    var propName = _ref[0],\n        propValue = _ref[1];\n\n    if (!isBsProp(propName)) {\n      elementProps[propName] = propValue;\n    }\n  });\n\n  return [getBsProps(props), elementProps];\n}\nexport function splitBsPropsAndOmit(props, omittedPropNames) {\n  var isOmittedProp = {};\n  omittedPropNames.forEach(function (propName) {\n    isOmittedProp[propName] = true;\n  });\n  var elementProps = {};\n\n  _Object$entries(props).forEach(function (_ref2) {\n    var propName = _ref2[0],\n        propValue = _ref2[1];\n\n    if (!isBsProp(propName) && !isOmittedProp[propName]) {\n      elementProps[propName] = propValue;\n    }\n  });\n\n  return [getBsProps(props), elementProps];\n}\n/**\n * Add a style variant to a Component. Mutates the propTypes of the component\n * in order to validate the new variant.\n */\n\nexport function addStyle(Component) {\n  for (var _len2 = arguments.length, styleVariant = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    styleVariant[_key2 - 1] = arguments[_key2];\n  }\n\n  bsStyles(styleVariant, Component);\n}\nexport var _curry = curry;"]},"metadata":{},"sourceType":"module"}