{"ast":null,"code":"// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\n\nvar $export = require('./_export');\n\nvar toLength = require('./_to-length');\n\nvar context = require('./_string-context');\n\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString\n  /* , position = 0 */\n  ) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith ? $startsWith.call(that, search, index) : that.slice(index, index + search.length) === search;\n  }\n});","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/babel-polyfill/node_modules/core-js/modules/es6.string.starts-with.js"],"names":["$export","require","toLength","context","STARTS_WITH","$startsWith","P","F","startsWith","searchString","that","index","Math","min","arguments","length","undefined","search","String","call","slice"],"mappings":"AAAA;AACA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,mBAAD,CAArB;;AACA,IAAIG,WAAW,GAAG,YAAlB;AACA,IAAIC,WAAW,GAAG,GAAGD,WAAH,CAAlB;AAEAJ,OAAO,CAACA,OAAO,CAACM,CAAR,GAAYN,OAAO,CAACO,CAAR,GAAYN,OAAO,CAAC,oBAAD,CAAP,CAA8BG,WAA9B,CAAzB,EAAqE,QAArE,EAA+E;AACpFI,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC;AAAa;AAAjC,IAAuD;AACjE,QAAIC,IAAI,GAAGP,OAAO,CAAC,IAAD,EAAOM,YAAP,EAAqBL,WAArB,CAAlB;AACA,QAAIO,KAAK,GAAGT,QAAQ,CAACU,IAAI,CAACC,GAAL,CAASC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAA/C,EAA0DN,IAAI,CAACK,MAA/D,CAAD,CAApB;AACA,QAAIE,MAAM,GAAGC,MAAM,CAACT,YAAD,CAAnB;AACA,WAAOJ,WAAW,GACdA,WAAW,CAACc,IAAZ,CAAiBT,IAAjB,EAAuBO,MAAvB,EAA+BN,KAA/B,CADc,GAEdD,IAAI,CAACU,KAAL,CAAWT,KAAX,EAAkBA,KAAK,GAAGM,MAAM,CAACF,MAAjC,MAA6CE,MAFjD;AAGD;AARmF,CAA/E,CAAP","sourcesContent":["// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}