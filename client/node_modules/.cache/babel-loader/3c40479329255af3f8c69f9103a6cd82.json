{"ast":null,"code":"'use strict';\n\nvar isObject = require('./_is-object');\n\nvar getPrototypeOf = require('./_object-gpo');\n\nvar HAS_INSTANCE = require('./_wks')('hasInstance');\n\nvar FunctionProto = Function.prototype; // 19.2.3.6 Function.prototype[@@hasInstance](V)\n\nif (!(HAS_INSTANCE in FunctionProto)) require('./_object-dp').f(FunctionProto, HAS_INSTANCE, {\n  value: function (O) {\n    if (typeof this != 'function' || !isObject(O)) return false;\n    if (!isObject(this.prototype)) return O instanceof this; // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n\n    while (O = getPrototypeOf(O)) if (this.prototype === O) return true;\n\n    return false;\n  }\n});","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/babel-polyfill/node_modules/core-js/modules/es6.function.has-instance.js"],"names":["isObject","require","getPrototypeOf","HAS_INSTANCE","FunctionProto","Function","prototype","f","value","O"],"mappings":"AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,QAAD,CAAP,CAAkB,aAAlB,CAAnB;;AACA,IAAIG,aAAa,GAAGC,QAAQ,CAACC,SAA7B,C,CACA;;AACA,IAAI,EAAEH,YAAY,IAAIC,aAAlB,CAAJ,EAAsCH,OAAO,CAAC,cAAD,CAAP,CAAwBM,CAAxB,CAA0BH,aAA1B,EAAyCD,YAAzC,EAAuD;AAAEK,EAAAA,KAAK,EAAE,UAAUC,CAAV,EAAa;AACjH,QAAI,OAAO,IAAP,IAAe,UAAf,IAA6B,CAACT,QAAQ,CAACS,CAAD,CAA1C,EAA+C,OAAO,KAAP;AAC/C,QAAI,CAACT,QAAQ,CAAC,KAAKM,SAAN,CAAb,EAA+B,OAAOG,CAAC,YAAY,IAApB,CAFkF,CAGjH;;AACA,WAAOA,CAAC,GAAGP,cAAc,CAACO,CAAD,CAAzB,EAA8B,IAAI,KAAKH,SAAL,KAAmBG,CAAvB,EAA0B,OAAO,IAAP;;AACxD,WAAO,KAAP;AACD;AAN4F,CAAvD","sourcesContent":["'use strict';\nvar isObject = require('./_is-object');\nvar getPrototypeOf = require('./_object-gpo');\nvar HAS_INSTANCE = require('./_wks')('hasInstance');\nvar FunctionProto = Function.prototype;\n// 19.2.3.6 Function.prototype[@@hasInstance](V)\nif (!(HAS_INSTANCE in FunctionProto)) require('./_object-dp').f(FunctionProto, HAS_INSTANCE, { value: function (O) {\n  if (typeof this != 'function' || !isObject(O)) return false;\n  if (!isObject(this.prototype)) return O instanceof this;\n  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;\n  return false;\n} });\n"]},"metadata":{},"sourceType":"script"}