{"ast":null,"code":"var _jsxFileName = \"/Users/nikkicastle/Desktop/code/asst-stage-manager/client/src/pages/User.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport { Container, Col, Row, Button, Card } from \"reactstrap\";\nimport NavBar from \"../components/Navbar\";\nimport MainJumbotron from \"../components/Jumbotron\";\nimport Footer from \"../components/Footer\";\nimport SearchBar from \"../components/SearchBar\";\nimport styled from \"styled-components\";\nimport API from \"../utils/API\";\nimport Grocerylist from \"../components/GroceryList\";\nimport Converter from \"../utils/Conversion\";\nimport CarIcon from \"../components/CarIcon\"; //Styling\n\nconst grey = \"#f9f9f9\";\nconst white = \"ffffff\";\nconst Div = styled.div`\n  div {\n    text-align: center;\n    background-color: ${props => props.color === \"grey\" ? grey : white};\n    padding: 15px;\n    margin: 0 auto;\n  }\n  p {\n    width: 60%;\n    margin: 15px auto;\n    font-size: 20px;\n    font-family: \"Roboto\";\n  }\n  h2 {\n   margin: 10px auto;\n   font-family: \"Raleway\";\n   font-size: 52px;\n  }\n  .button {\n    background-color: #cb5744;\n    border: none;\n  \n  }\n  .button:hover {\n  background-color: #ec9a59;\n  }\n  .rounded-circle {\n    max-width: 200px;\n  }\n  h4{\n    color: rgb(18, 61, 61);\n  }\n  #equivalency{\n    color: rgb(18, 61, 61);\n  }\n  h5{\n    justify-content: center;\n  }\n  }\n`;\n\nconst User = () => {\n  //Variables and States\n  const {\n    user,\n    isAuthenticated\n  } = useAuth0();\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [groceryList, setGroceryList] = useState([]);\n  const [totalGHG, setTotalGHG] = useState(0);\n  const currentUser = user.sub; // => if user then populate else => create user\n\n  useEffect(() => {\n    API.getUser(currentUser).then(dbUser => {\n      if (!dbUser.data) {\n        console.log(\"user not found\");\n        API.createUser({\n          username: user.email,\n          id: user.sub,\n          groceries: []\n        });\n      } else {\n        console.log(\"yay user found\", dbUser);\n        API.populateList(dbUser.data.id).then(res => {\n          console.log(res);\n          setGroceryList(res.data.groceryList);\n\n          if (res.data.groceryList.length) {\n            calculateGHG(res.data.groceryList);\n          }\n        });\n      }\n    }).catch(err => console.log(err));\n  }, []);\n\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault(); // take input search term and set it to correct format to search, first letter uppercase and rest lowercase\n\n    let word = searchTerm;\n    word = word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n    API.getFood(word).then(data => setSearchResults(data.data)).catch(err => console.log(err));\n    setSearchTerm(\"\");\n  };\n\n  const addToGroceryList = (event, id) => {\n    event.preventDefault(); // API call to Foods collection to grab food for User to add to list in User collection\n\n    API.addItem(id, currentUser).then(res => {\n      API.populateList(currentUser).then(res => {\n        console.log(res);\n        setGroceryList(res.data.groceryList);\n        calculateGHG(res.data.groceryList);\n      });\n    }).catch(err => console.log(err));\n  };\n\n  const calculateGHG = list => {\n    let totalG = list.reduce((a, b) => {\n      return {\n        ghgEmission: a.ghgEmission + b.ghgEmission\n      };\n    });\n    setTotalGHG(totalG.ghgEmission);\n  };\n\n  const removeFromGroceryList = (event, id) => {\n    event.preventDefault(); // API call to Foods collection to find item by ID and remove from User's collection\n\n    API.removeItem(id, currentUser).then(res => {\n      API.populateList(currentUser).then(res => {\n        setGroceryList(res.data.groceryList);\n        calculateGHG(res.data.groceryList);\n      }).catch(err => console.log(err));\n    });\n  };\n\n  return isAuthenticated && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MainJumbotron, {\n    image: \"userImg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    color: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: user.picture,\n    alt: user.name,\n    className: \"rounded-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"Welcome back, \", user.given_name, \"!\"))), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, groceryList.length ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grocerylist, {\n    list: groceryList,\n    removeFromGroceryList: removeFromGroceryList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 23\n    }\n  }, \"YOUR TOTAL GROCERY CARBON FOOTPRINT\"), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"equivalency\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 23\n    }\n  }, \"TOTAL: \", totalGHG.toFixed(1)), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"equivalency\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 23\n    }\n  }, \"Equivalent to \", /*#__PURE__*/React.createElement(Converter, {\n    ghg: totalGHG,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 39\n    }\n  }), \" car miles driven!\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CarIcon, {\n    ghg: totalGHG,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 23\n    }\n  })))) : /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, \"Add to your list by searching for an item! \"))), /*#__PURE__*/React.createElement(Div, {\n    color: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, \"Search for grocery items to add to your list and see your total carbon footprint for food consumption.\"), /*#__PURE__*/React.createElement(SearchBar, {\n    searchTerm: searchTerm,\n    handleInputChange: handleInputChange,\n    handleFormSubmit: handleFormSubmit,\n    placeholder: \"Food Item\",\n    name: \"item\",\n    button: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, searchResults.length ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 41\n    }\n  }, \" Search Results:\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 69\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, searchResults.length ? searchResults.map(result => /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    key: result._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    id: result._id,\n    product: result.reference,\n    country: result.country,\n    ghgemission: result.ghgEmission,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, result.reference), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }, \"Country Origin: \", result.country), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, \"Greenhouse Gas Emissions: \", result.ghgEmission, \" kg CO2\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: event => addToGroceryList(event, result._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }, \"Add Product to List\")))) : /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, \"No items found\")))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default withAuthenticationRequired(User);","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/src/pages/User.js"],"names":["React","useState","useEffect","useAuth0","withAuthenticationRequired","Container","Col","Row","Button","Card","NavBar","MainJumbotron","Footer","SearchBar","styled","API","Grocerylist","Converter","CarIcon","grey","white","Div","div","props","color","User","user","isAuthenticated","searchResults","setSearchResults","searchTerm","setSearchTerm","groceryList","setGroceryList","totalGHG","setTotalGHG","currentUser","sub","getUser","then","dbUser","data","console","log","createUser","username","email","id","groceries","populateList","res","length","calculateGHG","catch","err","handleInputChange","event","target","value","handleFormSubmit","preventDefault","word","charAt","toUpperCase","slice","toLowerCase","getFood","addToGroceryList","addItem","list","totalG","reduce","a","b","ghgEmission","removeFromGroceryList","removeItem","picture","name","given_name","toFixed","map","result","_id","reference","country"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport { Container, Col, Row, Button, Card } from \"reactstrap\"\nimport NavBar from \"../components/Navbar\";\nimport MainJumbotron from \"../components/Jumbotron\";\nimport Footer from \"../components/Footer\";\nimport SearchBar from \"../components/SearchBar\";\nimport styled from \"styled-components\";\nimport API from \"../utils/API\";\nimport Grocerylist from \"../components/GroceryList\";\nimport Converter from \"../utils/Conversion\";\nimport CarIcon from \"../components/CarIcon\";\n\n//Styling\nconst grey = \"#f9f9f9\";\nconst white = \"ffffff\";\n\nconst Div = styled.div`\n  div {\n    text-align: center;\n    background-color: ${props => props.color === \"grey\" ? grey : white};\n    padding: 15px;\n    margin: 0 auto;\n  }\n  p {\n    width: 60%;\n    margin: 15px auto;\n    font-size: 20px;\n    font-family: \"Roboto\";\n  }\n  h2 {\n   margin: 10px auto;\n   font-family: \"Raleway\";\n   font-size: 52px;\n  }\n  .button {\n    background-color: #cb5744;\n    border: none;\n  \n  }\n  .button:hover {\n  background-color: #ec9a59;\n  }\n  .rounded-circle {\n    max-width: 200px;\n  }\n  h4{\n    color: rgb(18, 61, 61);\n  }\n  #equivalency{\n    color: rgb(18, 61, 61);\n  }\n  h5{\n    justify-content: center;\n  }\n  }\n`\n\nconst User = () => {\n  \n  //Variables and States\n  const { user, isAuthenticated } = useAuth0();\n  const [searchResults, setSearchResults] = useState([])\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [groceryList, setGroceryList] = useState([]);\n  const [totalGHG, setTotalGHG] = useState(0)\n  const currentUser = user.sub;\n\n  // => if user then populate else => create user\n  useEffect(() => {\n\n    API.getUser(currentUser)\n      .then(dbUser => {\n        if (!dbUser.data) {\n          console.log(\"user not found\")\n          API.createUser({\n            username: user.email,\n            id: user.sub,\n            groceries: []\n          })\n        } else {\n          console.log(\"yay user found\", dbUser)\n          API.populateList(dbUser.data.id)\n            .then(res => {\n              console.log(res)\n              setGroceryList(res.data.groceryList);\n              if (res.data.groceryList.length) {\n                calculateGHG(res.data.groceryList);\n              }\n            })\n        }\n      })\n      .catch(err => console.log(err));\n  }, [])\n\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value);\n  }\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    // take input search term and set it to correct format to search, first letter uppercase and rest lowercase\n    let word = searchTerm;\n    word = word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n    API.getFood(word)\n      .then((data) => setSearchResults(data.data))\n      .catch(err => console.log(err))\n\n    setSearchTerm(\"\");\n  }\n\n  const addToGroceryList = (event, id) => {\n    event.preventDefault();\n    // API call to Foods collection to grab food for User to add to list in User collection\n    API.addItem(id, currentUser)\n      .then(res => {\n        API.populateList(currentUser)\n          .then(res => {\n            console.log(res)\n            setGroceryList(res.data.groceryList);\n            calculateGHG(res.data.groceryList);\n          })\n      })\n      .catch(err => console.log(err))\n  }\n\n  const calculateGHG = (list) => {\n    let totalG = list.reduce((a, b) => {\n      return { ghgEmission: a.ghgEmission + b.ghgEmission }\n    })\n    setTotalGHG(totalG.ghgEmission);\n  }\n\n  const removeFromGroceryList = (event, id) => {\n    event.preventDefault();\n    // API call to Foods collection to find item by ID and remove from User's collection\n    API.removeItem(id, currentUser)\n      .then(res => {\n        API.populateList(currentUser)\n          .then(res => {\n            setGroceryList(res.data.groceryList)\n            calculateGHG(res.data.groceryList);\n          })\n          .catch(err => console.log(err))\n      })\n  }\n\n  return (\n    isAuthenticated && (\n      <>\n        <NavBar />\n        <MainJumbotron image={\"userImg\"} />\n\n        <Container fluid={true} >\n          <Div color=\"grey\">\n            <div>\n              <img\n                src={user.picture}\n                alt={user.name}\n                className=\"rounded-circle\" />\n              <h1>Welcome back, {user.given_name}!</h1>\n            </div>\n          </Div>\n\n          <Div>\n            {/* If there are items in the grocery list, populate list. Otherwise subtitle telling User to search for an item */}\n            <div>\n              {groceryList.length ? (\n                <>\n                  <Row>\n                    <Grocerylist\n                      list={groceryList}\n                      removeFromGroceryList={removeFromGroceryList}\n                    />\n                  </Row>\n                  {/* Call on the Converter component to total up the ghg emissions for all items in User's grocery list and convert to miles driven */}\n                  <Row>\n                    <Col>\n                      <h4>YOUR TOTAL GROCERY CARBON FOOTPRINT</h4>\n                      <p id=\"equivalency\">\n                        TOTAL: {totalGHG.toFixed(1)}\n                      </p>\n                      <p id=\"equivalency\">\n                        Equivalent to <Converter ghg={totalGHG} /> car miles driven!\n                    </p>\n                    </Col>\n                    <Col>\n                      <CarIcon ghg={totalGHG} />\n                    </Col>\n                  </Row>\n                </>\n              ) : <h6>Add to your list by searching for an item! </h6>}\n            </div>\n          </Div>\n\n          <Div color=\"grey\">\n            <div>\n              <h4>Search for grocery items to add to your list and see your total carbon footprint for food consumption.</h4>\n              <SearchBar\n                searchTerm={searchTerm}\n                handleInputChange={handleInputChange}\n                handleFormSubmit={handleFormSubmit}\n                placeholder={\"Food Item\"}\n                name={\"item\"}\n                button={\"Search\"}\n              />\n              <Row>\n                {searchResults.length ? <h2> Search Results:</h2> : <div></div>}\n              </Row>\n              {/* If there are search results, map through them to create a card for each item in the array. Otherwise note no items were found*/}\n              <Row>\n                {searchResults.length ? (\n                  searchResults.map(result => (\n                    <Col md={3} key={result._id}>\n                      <Card\n                        id={result._id}\n                        product={result.reference}\n                        country={result.country}\n                        ghgemission={result.ghgEmission}\n                      >\n                        <p>{result.reference}</p>\n                        <p>Country Origin: {result.country}</p>\n                        <p>Greenhouse Gas Emissions: {result.ghgEmission} kg CO2</p>\n                        <Button\n                          onClick={(event) => addToGroceryList(event, result._id)}\n                        >\n                          Add Product to List\n                        </Button>\n                      </Card>\n                    </Col>\n                  ))\n\n                ) : <h5>No items found</h5>}\n              </Row>\n            </div>\n          </Div>\n\n          <Footer />\n        </Container>\n      </>\n    )\n  )\n}\n\nexport default withAuthenticationRequired(User);"]},"metadata":{},"sourceType":"module"}