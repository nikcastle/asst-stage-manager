{"ast":null,"code":"var global = require('./_global');\n\nvar macrotask = require('./_task').set;\n\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n\n    last = undefined;\n    if (parent) parent.enter();\n  }; // Node.js\n\n\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    }; // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, {\n      characterData: true\n    }); // eslint-disable-line no-new\n\n    notify = function () {\n      node.data = toggle = !toggle;\n    }; // environments with maybe non-completely correct, but existent Promise\n\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n\n    notify = function () {\n      promise.then(flush);\n    }; // for other environments - macrotask based on:\n    // - setImmediate\n    // - MessageChannel\n    // - window.postMessag\n    // - onreadystatechange\n    // - setTimeout\n\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n\n    if (!head) {\n      head = task;\n      notify();\n    }\n\n    last = task;\n  };\n};","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/babel-polyfill/node_modules/core-js/modules/_microtask.js"],"names":["global","require","macrotask","set","Observer","MutationObserver","WebKitMutationObserver","process","Promise","isNode","module","exports","head","last","notify","flush","parent","fn","domain","exit","next","e","undefined","enter","nextTick","navigator","standalone","toggle","node","document","createTextNode","observe","characterData","data","resolve","promise","then","call","task"],"mappings":"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","sourcesContent":["var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n"]},"metadata":{},"sourceType":"script"}