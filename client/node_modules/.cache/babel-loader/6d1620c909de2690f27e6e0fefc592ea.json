{"ast":null,"code":"var global = require('./_global');\n\nvar hide = require('./_hide');\n\nvar uid = require('./_uid');\n\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\nvar TypedArrayConstructors = 'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'.split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/babel-polyfill/node_modules/core-js/modules/_typed.js"],"names":["global","require","hide","uid","TYPED","VIEW","ABV","ArrayBuffer","DataView","CONSTR","i","l","Typed","TypedArrayConstructors","split","prototype","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,SAAD,CAAlB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIG,KAAK,GAAGD,GAAG,CAAC,aAAD,CAAf;AACA,IAAIE,IAAI,GAAGF,GAAG,CAAC,MAAD,CAAd;AACA,IAAIG,GAAG,GAAG,CAAC,EAAEN,MAAM,CAACO,WAAP,IAAsBP,MAAM,CAACQ,QAA/B,CAAX;AACA,IAAIC,MAAM,GAAGH,GAAb;AACA,IAAII,CAAC,GAAG,CAAR;AACA,IAAIC,CAAC,GAAG,CAAR;AACA,IAAIC,KAAJ;AAEA,IAAIC,sBAAsB,GACxB,gHAD2B,CAE3BC,KAF2B,CAErB,GAFqB,CAA7B;;AAIA,OAAOJ,CAAC,GAAGC,CAAX,EAAc;AACZ,MAAIC,KAAK,GAAGZ,MAAM,CAACa,sBAAsB,CAACH,CAAC,EAAF,CAAvB,CAAlB,EAAiD;AAC/CR,IAAAA,IAAI,CAACU,KAAK,CAACG,SAAP,EAAkBX,KAAlB,EAAyB,IAAzB,CAAJ;AACAF,IAAAA,IAAI,CAACU,KAAK,CAACG,SAAP,EAAkBV,IAAlB,EAAwB,IAAxB,CAAJ;AACD,GAHD,MAGOI,MAAM,GAAG,KAAT;AACR;;AAEDO,MAAM,CAACC,OAAP,GAAiB;AACfX,EAAAA,GAAG,EAAEA,GADU;AAEfG,EAAAA,MAAM,EAAEA,MAFO;AAGfL,EAAAA,KAAK,EAAEA,KAHQ;AAIfC,EAAAA,IAAI,EAAEA;AAJS,CAAjB","sourcesContent":["var global = require('./_global');\nvar hide = require('./_hide');\nvar uid = require('./_uid');\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n"]},"metadata":{},"sourceType":"script"}