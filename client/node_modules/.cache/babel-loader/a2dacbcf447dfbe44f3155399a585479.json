{"ast":null,"code":"var _jsxFileName = \"/Users/nikkicastle/Desktop/code/asst-stage-manager/client/src/components/navbar.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem, Button, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { NavLink as RouterNavLink, Link } from \"react-router-dom\";\nimport styled from \"styled-components\"; //Styling\n\nconst NavStyle = styled.div`\n  .logo {\n    border-radius: 40px;\n    height: 80px;\n    justify-content: right;\n    margin top: 0px;\n    width: 80px;\n  }\n  .dropdown-profile {\n    color: black;\n  }\n  a {\n    color: #ffffff;\n  }\n  .navbar{\n    background-color:#451814;\n    height: 80px;\n    left: 0;\n    position: fixed;\n    right: 0;\n    top: 0;\n  }\n`;\n\nconst NavBar = () => {\n  //Variables and States\n  const [navBackground, setNavBackground] = useState(); // const navRef = useRef()\n  // navRef.current = navBackground\n  // useEffect(() => {\n  //   const handleScroll = () => {\n  //     const show = window.scrollY > 450\n  //     if (navRef.current !== show) {\n  //       setNavBackground(show)\n  //     }\n  //   }\n  //   document.addEventListener('scroll', handleScroll)\n  //   return () => {\n  //     document.removeEventListener('scroll', handleScroll)\n  //   }\n  // }, [])\n\n  const [isOpen, setIsOpen] = useState(false);\n  const {\n    user,\n    isAuthenticated,\n    loginWithRedirect,\n    logout\n  } = useAuth0();\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const logoutWithRedirect = () => logout({\n    returnTo: window.location.origin\n  });\n\n  return /*#__PURE__*/React.createElement(NavStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./logo.png\",\n    className: \"logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Nav, {\n    className: \"mr-auto\",\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \" Notes\"))), /*#__PURE__*/React.createElement(Nav, {\n    className: \"d-none d-md-block\",\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, !isAuthenticated && /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"qsLoginBtn\",\n    color: \"primary\",\n    className: \"btn-margin\",\n    onClick: () => loginWithRedirect(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, \"Log in\")), isAuthenticated && /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    nav: true,\n    inNavbar: true,\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    nav: true,\n    caret: true,\n    id: \"profileDropDown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: user.picture,\n    alt: \"Profile\",\n    className: \"nav-user-profile rounded-circle\",\n    width: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    header: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, user.name), /*#__PURE__*/React.createElement(DropdownItem, {\n    tag: RouterNavLink,\n    to: \"./User\",\n    className: \"dropdown-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, \" Productions\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    id: \"qsLogoutBtn\",\n    onClick: () => logoutWithRedirect(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, \" Log out\")))))));\n};\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/src/components/navbar.js"],"names":["React","useState","useRef","useEffect","Collapse","Navbar","NavbarToggler","Nav","NavItem","Button","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","useAuth0","NavLink","RouterNavLink","Link","styled","NavStyle","div","NavBar","navBackground","setNavBackground","isOpen","setIsOpen","user","isAuthenticated","loginWithRedirect","logout","toggle","logoutWithRedirect","returnTo","window","location","origin","picture","name"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem, Button, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { NavLink as RouterNavLink, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n//Styling\nconst NavStyle = styled.div`\n  .logo {\n    border-radius: 40px;\n    height: 80px;\n    justify-content: right;\n    margin top: 0px;\n    width: 80px;\n  }\n  .dropdown-profile {\n    color: black;\n  }\n  a {\n    color: #ffffff;\n  }\n  .navbar{\n    background-color:#451814;\n    height: 80px;\n    left: 0;\n    position: fixed;\n    right: 0;\n    top: 0;\n  }\n`\n\nconst NavBar = () => {\n  //Variables and States\n  const [navBackground, setNavBackground] = useState()\n  // const navRef = useRef()\n  // navRef.current = navBackground\n\n  // useEffect(() => {\n  //   const handleScroll = () => {\n  //     const show = window.scrollY > 450\n  //     if (navRef.current !== show) {\n  //       setNavBackground(show)\n  //     }\n  //   }\n  //   document.addEventListener('scroll', handleScroll)\n  //   return () => {\n  //     document.removeEventListener('scroll', handleScroll)\n  //   }\n  // }, [])\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const {\n    user,\n    isAuthenticated,\n    loginWithRedirect,\n    logout,\n  } = useAuth0();\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const logoutWithRedirect = () =>\n    logout({\n      returnTo: window.location.origin,\n    });\n\n  return (\n    <NavStyle>\n      <div>\n        <Navbar className=\"navbar\">\n        <img src=\"./logo.png\" className=\"logo\" alt=\"logo\" />\n          {/* <Link to =\"/Home\">HOME </Link> */}\n          {/* <NavbarToggler onClick={toggle} className=\"hamburger\" /> */}\n          {/* <Collapse isOpen={isOpen} navbar> */}\n            <Nav className=\"mr-auto\" navbar>\n              <NavItem>\n                <Link to =\"/notes\"> Notes</Link>\n              </NavItem>\n              {/* <NavItem>\n                <Link to =\"/farmers-markets\">Farmers Market</Link>\n              </NavItem> */}\n            </Nav>\n            <Nav className=\"d-none d-md-block\" navbar>\n              {!isAuthenticated && (\n                <NavItem>\n                  <Button\n                    id=\"qsLoginBtn\"\n                    color=\"primary\"\n                    className=\"btn-margin\"\n                    onClick={() => loginWithRedirect()}\n                  >\n                    Log in\n                  </Button>\n                </NavItem>\n              )}\n              {/* Add User picture, Grocery List link, and Log out link if they are logged in */}\n              {isAuthenticated && (\n                <UncontrolledDropdown nav inNavbar className=\"dropdown\">\n                <DropdownToggle nav caret id=\"profileDropDown\">\n                  <img\n                    src={user.picture}\n                    alt=\"Profile\"\n                    className=\"nav-user-profile rounded-circle\"\n                    width=\"50\"\n                  />\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem header>{user.name}</DropdownItem>\n                  <DropdownItem\n                    tag={RouterNavLink}\n                    to=\"./User\"\n                    className=\"dropdown-profile\"\n                  > Productions\n                  </DropdownItem>\n                  <DropdownItem\n                    id=\"qsLogoutBtn\"\n                    onClick={() => logoutWithRedirect()}\n                  > Log out\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              )}\n            </Nav>\n          {/* </Collapse> */}\n        </Navbar>\n      </div>\n    </NavStyle>\n  );\n}\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}