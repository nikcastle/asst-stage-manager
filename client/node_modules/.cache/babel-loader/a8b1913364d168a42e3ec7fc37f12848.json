{"ast":null,"code":"var _jsxFileName = \"/Users/nikkicastle/Desktop/code/asst-stage-manager/client/src/components/Notes.js\";\nimport React, { useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport styled from \"styled-components\";\nimport Calendar from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css';\nimport { Button, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Form, FormGroup, Label, Input, FormText, Row } from \"reactstrap\";\nimport Navbar from \"./navbar\";\nimport AddProduction from \"../components/addProduction\";\nimport API from \"../utils/API\";\nconst StyleWrapper = styled.div`\n    margin: 0 50px;\n    h1 {\n        color:  #451814;\n        justify-content: center;\n        margin-top: 150px;\n        text-align: center;\n    }\n    body {\n        justify-content: center;\n        text-align: center;\n    }\n    .calendar {\n        border: 10px solid #dfc140;\n        border-radius: 10px;\n        margin: auto;\n        margin-bottom: 50px;\n    }\n    h2 {\n        color: #a95534\n        margin-top: 30px;\n    }\n    .dropdown {\n        margin: 20px;\n    }\n    button {\n        margin-bottom: 20px;\n    }\n    .upload {\n        align-items: center;\n        display: inline-flex;\n        justify-content: space-between;\n        margin: 0 auto;\n        text-align: center;\n        width: 500px;\n    }\n`;\n\nconst Notes = () => {\n  const {\n    isAuthenticated\n  } = useAuth0;\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  const [note, setNote] = useState({});\n  const [notes, setNotes] = useState([]);\n  const [date, setDate] = useState(\"\");\n  const {\n    title,\n    text,\n    production\n  } = note;\n\n  const handleSetDate = () => {\n    setDate({});\n  };\n\n  const createNote = () => {\n    API.addNote();\n  };\n\n  const indexedNote = record => {\n    const request = window.indexedDB.open(\"noteList\", 1);\n\n    request.onupgradeneeded = ({\n      target\n    }) => {\n      const db = target.result;\n      const objectStore = db.createObjectStore(\"noteList\", {\n        autoIncrement: true\n      });\n      objectStore.createIndex(\"timestamp\", \"timestamp\");\n      objectStore.createIndex(\"category\", \"category\");\n    };\n\n    request.onsuccess = event => {\n      console.log(request.result);\n      const db = request.result;\n      const transaction = db.transaction([\"noteList\"], \"readwrite\");\n      const noteListStore = transaction.objectStore(\"noteList\");\n      const statusIndex = noteListStore.index(\"statusIndex\");\n      noteListStore.add(record);\n    };\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNote({ ...note,\n      [name]: value\n    });\n  };\n\n  const handleFormSubmit = (event, data) => {\n    event.preventDefault();\n    console.log(\"clicked\");\n\n    if (isAuthenticated) {\n      createNote(data);\n    } else {\n      indexedNote(data);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StyleWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Rehearsal Notes\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Select your rehearsal date\"), /*#__PURE__*/React.createElement(Calendar, {\n    className: \"calendar\",\n    onClick: handleSetDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, isAuthenticated ? /*#__PURE__*/React.createElement(Dropdown, {\n    group: true,\n    isOpen: dropdownOpen,\n    size: \"md\",\n    toggle: toggle,\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    caret: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, \"Select a production from your list\"), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, \"Another Action\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, \"Another Action\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, \"Another Action\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, \"Another Action\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"Note Title\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"production\",\n    placeholder: \"Production Name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"text\",\n    id: \"exampleText\",\n    placeholder: \"Note Text\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 23\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    name: \"file\",\n    id: \"exampleFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(FormText, {\n    color: \"muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 23\n    }\n  }, \"Upload your script copy to save an electronic version\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, \"Your Notes\")));\n};\n\nexport default Notes;","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/src/components/Notes.js"],"names":["React","useState","useAuth0","styled","Calendar","Button","Dropdown","DropdownItem","DropdownMenu","DropdownToggle","Form","FormGroup","Label","Input","FormText","Row","Navbar","AddProduction","API","StyleWrapper","div","Notes","isAuthenticated","dropdownOpen","setDropdownOpen","toggle","prevState","note","setNote","notes","setNotes","date","setDate","title","text","production","handleSetDate","createNote","addNote","indexedNote","record","request","window","indexedDB","open","onupgradeneeded","target","db","result","objectStore","createObjectStore","autoIncrement","createIndex","onsuccess","event","console","log","transaction","noteListStore","statusIndex","index","add","handleInputChange","name","value","handleFormSubmit","data","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport styled from \"styled-components\";\nimport Calendar from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css';\nimport { Button, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Form, FormGroup, Label, Input, FormText, Row } from \"reactstrap\"\nimport Navbar from \"./navbar\";\nimport AddProduction from \"../components/addProduction\";\nimport API from \"../utils/API\";\n\n\nconst StyleWrapper = styled.div`\n    margin: 0 50px;\n    h1 {\n        color:  #451814;\n        justify-content: center;\n        margin-top: 150px;\n        text-align: center;\n    }\n    body {\n        justify-content: center;\n        text-align: center;\n    }\n    .calendar {\n        border: 10px solid #dfc140;\n        border-radius: 10px;\n        margin: auto;\n        margin-bottom: 50px;\n    }\n    h2 {\n        color: #a95534\n        margin-top: 30px;\n    }\n    .dropdown {\n        margin: 20px;\n    }\n    button {\n        margin-bottom: 20px;\n    }\n    .upload {\n        align-items: center;\n        display: inline-flex;\n        justify-content: space-between;\n        margin: 0 auto;\n        text-align: center;\n        width: 500px;\n    }\n`\n\n\nconst Notes = () => {\n    \n    const { isAuthenticated } = useAuth0;\n    \n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    \n    const toggle = () => setDropdownOpen(prevState => !prevState)\n    \n    const [note, setNote] = useState({});\n    const [notes, setNotes] = useState([]);\n    const [date, setDate] = useState(\"\");\n\n    const { title, text, production } = note\n\n    const handleSetDate = () => {\n        setDate({})\n    }\n\n    const createNote = () => {\n        API.addNote()\n    }\n\n    const indexedNote = (record) => {\n        const request = window.indexedDB.open(\"noteList\", 1);\n\n      request.onupgradeneeded = ({ target }) => {\n        const db = target.result;\n\n        const objectStore = db.createObjectStore(\"noteList\", { autoIncrement: true });\n        \n        objectStore.createIndex(\"timestamp\", \"timestamp\");\n        objectStore.createIndex(\"category\", \"category\"); \n\n      };\n\n      request.onsuccess = event => {\n        console.log(request.result);\n        const db = request.result;\n        const transaction = db.transaction([\"noteList\"], \"readwrite\"); \n        const noteListStore = transaction.objectStore(\"noteList\"); \n        const statusIndex = noteListStore.index(\"statusIndex\"); \n        noteListStore.add(record)\n      };\n\n    }\n    \n    const handleInputChange = (event) => {\n        const { name, value } = event.target\n        setNote({...note, [name]: value });\n      }\n\n    const handleFormSubmit = (event, data) => {\n        event.preventDefault();\n        console.log(\"clicked\")\n        if(isAuthenticated) {\n            createNote(data);\n        } else {\n            indexedNote(data);\n        }\n    }\n\n\n   return (\n       <StyleWrapper>\n           <Navbar/>\n           <header className=\"App-header\">\n              \n              <h1 className=\"header\">\n              Rehearsal Notes\n              </h1>\n          </header>\n          <div>\n              <p>Select your rehearsal date</p>\n              <Calendar \n              className=\"calendar\"\n              onClick={handleSetDate}\n              />\n              <Form>\n                  {isAuthenticated ? (\n                      \n                    <Dropdown \n                    group isOpen={dropdownOpen} \n                    size=\"md\" \n                    toggle={toggle}\n                    className=\"dropdown\"\n                    >\n                        <DropdownToggle caret>\n                            Select a production from your list\n                        </DropdownToggle>\n                        <DropdownMenu>\n                            <DropdownItem>Another Action</DropdownItem>\n                            <DropdownItem>Another Action</DropdownItem>\n                            <DropdownItem>Another Action</DropdownItem>\n                            <DropdownItem>Another Action</DropdownItem>\n                        </DropdownMenu>\n                    </Dropdown>\n                  ) : <div></div>}\n              {/* <h2>Enter your rehearsal notes here</h2> */}\n                  <FormGroup>\n                      <Input type=\"text\" \n                      name=\"title\"\n                      placeholder=\"Note Title\" \n                      onChange={handleInputChange}/>\n                  </FormGroup>\n                  <FormGroup>\n                      <Input type=\"text\" \n                      name=\"production\"\n                      placeholder=\"Production Name\" \n                      onChange={handleInputChange}/>\n                  </FormGroup>\n                  <FormGroup>\n                      <Input type=\"textarea\" \n                      name=\"text\"\n                      id=\"exampleText\" \n                      placeholder=\"Note Text\" \n                      onChange={handleInputChange}/>\n                  </FormGroup>\n                      <Button\n                      onClick={handleFormSubmit}\n                      >Submit\n                      </Button>\n                <Row>\n                  <FormGroup className=\"upload\">\n                      {/* <Label for=\"exampleFile\">File</Label> */}\n                      <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n                      <FormText color=\"muted\">\n                      Upload your script copy to save an electronic version\n                      </FormText>\n                  </FormGroup>\n                </Row>\n              </Form>\n          </div>\n          <div>\n              <h2>Your Notes</h2>\n          </div>\n       </StyleWrapper>\n   )\n    \n}\n\nexport default Notes;"]},"metadata":{},"sourceType":"module"}