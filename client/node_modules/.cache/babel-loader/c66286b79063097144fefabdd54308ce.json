{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { cloneElement } from 'react';\nimport uncontrollable from 'uncontrollable';\nimport { bsClass, getClassSet, splitBsPropsAndOmit } from './utils/bootstrapUtils';\nimport ValidComponentChildren from './utils/ValidComponentChildren';\nimport { generatedId } from './utils/PropTypes';\nvar propTypes = {\n  accordion: PropTypes.bool,\n\n  /**\n   * When `accordion` is enabled, `activeKey` controls the which child `Panel` is expanded. `activeKey` should\n   * match a child Panel `eventKey` prop exactly.\n   *\n   * @controllable onSelect\n   */\n  activeKey: PropTypes.any,\n\n  /**\n   * A callback fired when a child Panel collapse state changes. It's called with the next expanded `activeKey`\n   *\n   * @controllable activeKey\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * An HTML role attribute\n   */\n  role: PropTypes.string,\n\n  /**\n   * A function that takes an eventKey and type and returns a\n   * unique id for each Panel heading and Panel Collapse. The function _must_ be a pure function,\n   * meaning it should always return the _same_ id for the same set of inputs. The default\n   * value requires that an `id` to be set for the PanelGroup.\n   *\n   * The `type` argument will either be `\"body\"` or `\"heading\"`.\n   *\n   * @defaultValue (eventKey, type) => `${this.props.id}-${type}-${key}`\n   */\n  generateChildId: PropTypes.func,\n\n  /**\n   * HTML id attribute, required if no `generateChildId` prop\n   * is specified.\n   */\n  id: generatedId('PanelGroup')\n};\nvar defaultProps = {\n  accordion: false\n};\nvar childContextTypes = {\n  $bs_panelGroup: PropTypes.shape({\n    getId: PropTypes.func,\n    headerRole: PropTypes.string,\n    panelRole: PropTypes.string,\n    activeKey: PropTypes.any,\n    onToggle: PropTypes.func\n  })\n};\n\nvar PanelGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(PanelGroup, _React$Component);\n\n  function PanelGroup() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleSelect = function (key, expanded, e) {\n      if (expanded) {\n        _this.props.onSelect(key, e);\n      } else if (_this.props.activeKey === key) {\n        _this.props.onSelect(null, e);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = PanelGroup.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    var _this$props = this.props,\n        activeKey = _this$props.activeKey,\n        accordion = _this$props.accordion,\n        generateChildId = _this$props.generateChildId,\n        id = _this$props.id;\n    var getId = null;\n\n    if (accordion) {\n      getId = generateChildId || function (key, type) {\n        return id ? id + \"-\" + type + \"-\" + key : null;\n      };\n    }\n\n    return {\n      $bs_panelGroup: _extends({\n        getId: getId,\n        headerRole: 'tab',\n        panelRole: 'tabpanel'\n      }, accordion && {\n        activeKey: activeKey,\n        onToggle: this.handleSelect\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        accordion = _this$props2.accordion,\n        className = _this$props2.className,\n        children = _this$props2.children,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"accordion\", \"className\", \"children\"]);\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(props, ['onSelect', 'activeKey']),\n        bsProps = _splitBsPropsAndOmit[0],\n        elementProps = _splitBsPropsAndOmit[1];\n\n    if (accordion) {\n      elementProps.role = elementProps.role || 'tablist';\n    }\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      className: classNames(className, classes)\n    }), ValidComponentChildren.map(children, function (child) {\n      return cloneElement(child, {\n        bsStyle: child.props.bsStyle || bsProps.bsStyle\n      });\n    }));\n  };\n\n  return PanelGroup;\n}(React.Component);\n\nPanelGroup.propTypes = propTypes;\nPanelGroup.defaultProps = defaultProps;\nPanelGroup.childContextTypes = childContextTypes;\nexport default uncontrollable(bsClass('panel-group', PanelGroup), {\n  activeKey: 'onSelect'\n});","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/node_modules/react-bootstrap/es/PanelGroup.js"],"names":["_objectWithoutPropertiesLoose","_extends","_inheritsLoose","classNames","PropTypes","React","cloneElement","uncontrollable","bsClass","getClassSet","splitBsPropsAndOmit","ValidComponentChildren","generatedId","propTypes","accordion","bool","activeKey","any","onSelect","func","role","string","generateChildId","id","defaultProps","childContextTypes","$bs_panelGroup","shape","getId","headerRole","panelRole","onToggle","PanelGroup","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","handleSelect","key","expanded","e","props","_proto","prototype","getChildContext","_this$props","type","render","_this$props2","className","children","_splitBsPropsAndOmit","bsProps","elementProps","classes","createElement","map","child","bsStyle","Component"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { cloneElement } from 'react';\nimport uncontrollable from 'uncontrollable';\nimport { bsClass, getClassSet, splitBsPropsAndOmit } from './utils/bootstrapUtils';\nimport ValidComponentChildren from './utils/ValidComponentChildren';\nimport { generatedId } from './utils/PropTypes';\nvar propTypes = {\n  accordion: PropTypes.bool,\n\n  /**\n   * When `accordion` is enabled, `activeKey` controls the which child `Panel` is expanded. `activeKey` should\n   * match a child Panel `eventKey` prop exactly.\n   *\n   * @controllable onSelect\n   */\n  activeKey: PropTypes.any,\n\n  /**\n   * A callback fired when a child Panel collapse state changes. It's called with the next expanded `activeKey`\n   *\n   * @controllable activeKey\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * An HTML role attribute\n   */\n  role: PropTypes.string,\n\n  /**\n   * A function that takes an eventKey and type and returns a\n   * unique id for each Panel heading and Panel Collapse. The function _must_ be a pure function,\n   * meaning it should always return the _same_ id for the same set of inputs. The default\n   * value requires that an `id` to be set for the PanelGroup.\n   *\n   * The `type` argument will either be `\"body\"` or `\"heading\"`.\n   *\n   * @defaultValue (eventKey, type) => `${this.props.id}-${type}-${key}`\n   */\n  generateChildId: PropTypes.func,\n\n  /**\n   * HTML id attribute, required if no `generateChildId` prop\n   * is specified.\n   */\n  id: generatedId('PanelGroup')\n};\nvar defaultProps = {\n  accordion: false\n};\nvar childContextTypes = {\n  $bs_panelGroup: PropTypes.shape({\n    getId: PropTypes.func,\n    headerRole: PropTypes.string,\n    panelRole: PropTypes.string,\n    activeKey: PropTypes.any,\n    onToggle: PropTypes.func\n  })\n};\n\nvar PanelGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(PanelGroup, _React$Component);\n\n  function PanelGroup() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleSelect = function (key, expanded, e) {\n      if (expanded) {\n        _this.props.onSelect(key, e);\n      } else if (_this.props.activeKey === key) {\n        _this.props.onSelect(null, e);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = PanelGroup.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    var _this$props = this.props,\n        activeKey = _this$props.activeKey,\n        accordion = _this$props.accordion,\n        generateChildId = _this$props.generateChildId,\n        id = _this$props.id;\n    var getId = null;\n\n    if (accordion) {\n      getId = generateChildId || function (key, type) {\n        return id ? id + \"-\" + type + \"-\" + key : null;\n      };\n    }\n\n    return {\n      $bs_panelGroup: _extends({\n        getId: getId,\n        headerRole: 'tab',\n        panelRole: 'tabpanel'\n      }, accordion && {\n        activeKey: activeKey,\n        onToggle: this.handleSelect\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        accordion = _this$props2.accordion,\n        className = _this$props2.className,\n        children = _this$props2.children,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"accordion\", \"className\", \"children\"]);\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(props, ['onSelect', 'activeKey']),\n        bsProps = _splitBsPropsAndOmit[0],\n        elementProps = _splitBsPropsAndOmit[1];\n\n    if (accordion) {\n      elementProps.role = elementProps.role || 'tablist';\n    }\n\n    var classes = getClassSet(bsProps);\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      className: classNames(className, classes)\n    }), ValidComponentChildren.map(children, function (child) {\n      return cloneElement(child, {\n        bsStyle: child.props.bsStyle || bsProps.bsStyle\n      });\n    }));\n  };\n\n  return PanelGroup;\n}(React.Component);\n\nPanelGroup.propTypes = propTypes;\nPanelGroup.defaultProps = defaultProps;\nPanelGroup.childContextTypes = childContextTypes;\nexport default uncontrollable(bsClass('panel-group', PanelGroup), {\n  activeKey: 'onSelect'\n});"]},"metadata":{},"sourceType":"module"}