{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  //Internal API database calls\n  getUser: currentUser => {\n    return axios.get(`/api/users/${currentUser}`);\n  },\n  createUser: userData => {\n    return axios.post(`/api/users`, userData);\n  },\n  populateList: id => {\n    return axios.get(`/api/users/populate/${id}`);\n  },\n  findUsers: () => {\n    return axios.get(`/api/users`);\n  },\n  addNote: (id, currentUser) => {\n    return axios.post(`/api/notes/item/${id}?currentUser=${currentUser}`);\n  },\n  getNotes: (id, currentUser) => {\n    return axios.get(`/api/notes/item/${id}?currentUser=${currentUser}`);\n  },\n  removeNote: (id, currentUser) => {\n    return axios.get(`/api/notes/remove/${id}?currentUser=${currentUser}`);\n  }\n};","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/src/utils/API.js"],"names":["axios","getUser","currentUser","get","createUser","userData","post","populateList","id","findUsers","addNote","getNotes","removeNote"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AAEX;AACAC,EAAAA,OAAO,EAAEC,WAAW,IAAI;AACpB,WAAOF,KAAK,CAACG,GAAN,CAAW,cAAaD,WAAY,EAApC,CAAP;AACH,GALU;AAOXE,EAAAA,UAAU,EAAEC,QAAQ,IAAI;AACpB,WAAOL,KAAK,CAACM,IAAN,CAAY,YAAZ,EAAyBD,QAAzB,CAAP;AACH,GATU;AAWXE,EAAAA,YAAY,EAAEC,EAAE,IAAI;AAChB,WAAOR,KAAK,CAACG,GAAN,CAAW,uBAAsBK,EAAG,EAApC,CAAP;AACH,GAbU;AAeXC,EAAAA,SAAS,EAAE,MAAM;AACb,WAAOT,KAAK,CAACG,GAAN,CAAW,YAAX,CAAP;AACH,GAjBU;AAmBXO,EAAAA,OAAO,EAAE,CAACF,EAAD,EAAKN,WAAL,KAAqB;AAC1B,WAAOF,KAAK,CAACM,IAAN,CAAY,mBAAkBE,EAAG,gBAAeN,WAAY,EAA5D,CAAP;AACH,GArBU;AAuBXS,EAAAA,QAAQ,EAAE,CAACH,EAAD,EAAKN,WAAL,KAAqB;AAC3B,WAAOF,KAAK,CAACG,GAAN,CAAW,mBAAkBK,EAAG,gBAAeN,WAAY,EAA3D,CAAP;AACH,GAzBU;AA2BXU,EAAAA,UAAU,EAAE,CAACJ,EAAD,EAAKN,WAAL,KAAqB;AAC7B,WAAOF,KAAK,CAACG,GAAN,CAAW,qBAAoBK,EAAG,gBAAeN,WAAY,EAA7D,CAAP;AACH;AA7BU,CAAf","sourcesContent":["import axios from \"axios\";\n\nexport default {\n   \n    //Internal API database calls\n    getUser: currentUser => {\n        return axios.get(`/api/users/${currentUser}`)\n    },\n\n    createUser: userData => {\n        return axios.post(`/api/users`, userData)\n    },\n\n    populateList: id => {\n        return axios.get(`/api/users/populate/${id}`)\n    },\n\n    findUsers: () => {\n        return axios.get(`/api/users`)\n    },\n\n    addNote: (id, currentUser) => {\n        return axios.post(`/api/notes/item/${id}?currentUser=${currentUser}`)\n    },\n\n    getNotes: (id, currentUser) => {\n        return axios.get(`/api/notes/item/${id}?currentUser=${currentUser}`)\n    },\n\n    removeNote: (id, currentUser) => {\n        return axios.get(`/api/notes/remove/${id}?currentUser=${currentUser}`)\n    }\n\n}"]},"metadata":{},"sourceType":"module"}