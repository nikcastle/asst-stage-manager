{"ast":null,"code":"var _jsxFileName = \"/Users/nikkicastle/Desktop/code/asst-stage-manager/client/src/pages/User.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport { Container, Col, Row, Button, Card } from \"reactstrap\";\nimport NavBar from \"../components/navbar\"; // import MainJumbotron from \"../components/Jumbotron\";\n// import Footer from \"../components/Footer\";\n// import SearchBar from \"../components/SearchBar\";\n\nimport styled from \"styled-components\"; // import API from \"../utils/API\";\n// import Grocerylist from \"../components/GroceryList\";\n// import Converter from \"../utils/Conversion\";\n// import CarIcon from \"../components/CarIcon\";\n//Styling\n\nconst grey = \"#f9f9f9\";\nconst white = \"ffffff\";\nconst Div = styled.div`\n  div {\n    text-align: center;\n    background-color: ${props => props.color === \"grey\" ? grey : white};\n    padding: 15px;\n    margin: 0 auto;\n  }\n  p {\n    width: 60%;\n    margin: 15px auto;\n    font-size: 20px;\n    font-family: \"Roboto\";\n  }\n  h2 {\n   margin: 10px auto;\n   font-family: \"Raleway\";\n   font-size: 52px;\n  }\n  .button {\n    background-color: #cb5744;\n    border: none;\n  \n  }\n  .button:hover {\n  background-color: #ec9a59;\n  }\n  .rounded-circle {\n    max-width: 200px;\n  }\n  h4{\n    color: rgb(18, 61, 61);\n  }\n  #equivalency{\n    color: rgb(18, 61, 61);\n  }\n  h5{\n    justify-content: center;\n  }\n  }\n`;\n\nconst User = () => {\n  //Variables and States\n  const {\n    user,\n    isAuthenticated\n  } = useAuth0();\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [groceryList, setGroceryList] = useState([]);\n  const [totalGHG, setTotalGHG] = useState(0);\n  const currentUser = user.sub; // => if user then populate else => create user\n  //   useEffect(() => {\n  //     API.getUser(currentUser)\n  //       .then(dbUser => {\n  //         if (!dbUser.data) {\n  //           console.log(\"user not found\")\n  //           API.createUser({\n  //             username: user.email,\n  //             id: user.sub,\n  //             groceries: []\n  //           })\n  //         } else {\n  //           console.log(\"yay user found\", dbUser)\n  //           API.populateList(dbUser.data.id)\n  //             .then(res => {\n  //               console.log(res)\n  //               setGroceryList(res.data.groceryList);\n  //               if (res.data.groceryList.length) {\n  //                 calculateGHG(res.data.groceryList);\n  //               }\n  //             })\n  //         }\n  //       })\n  //       .catch(err => console.log(err));\n  //   }, [])\n\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value);\n  }; //   const handleFormSubmit = event => {\n  //     event.preventDefault();\n  //     // take input search term and set it to correct format to search, first letter uppercase and rest lowercase\n  //     let word = searchTerm;\n  //     word = word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n  //     API.getFood(word)\n  //       .then((data) => setSearchResults(data.data))\n  //       .catch(err => console.log(err))\n  //     setSearchTerm(\"\");\n  //   }\n  //   const addToGroceryList = (event, id) => {\n  //     event.preventDefault();\n  //     // API call to Foods collection to grab food for User to add to list in User collection\n  //     API.addItem(id, currentUser)\n  //       .then(res => {\n  //         API.populateList(currentUser)\n  //           .then(res => {\n  //             console.log(res)\n  //             setGroceryList(res.data.groceryList);\n  //             calculateGHG(res.data.groceryList);\n  //           })\n  //       })\n  //       .catch(err => console.log(err))\n  //   }\n  //   const calculateGHG = (list) => {\n  //     let totalG = list.reduce((a, b) => {\n  //       return { ghgEmission: a.ghgEmission + b.ghgEmission }\n  //     })\n  //     setTotalGHG(totalG.ghgEmission);\n  //   }\n  //   const removeFromGroceryList = (event, id) => {\n  //     event.preventDefault();\n  //     // API call to Foods collection to find item by ID and remove from User's collection\n  //     API.removeItem(id, currentUser)\n  //       .then(res => {\n  //         API.populateList(currentUser)\n  //           .then(res => {\n  //             setGroceryList(res.data.groceryList)\n  //             calculateGHG(res.data.groceryList);\n  //           })\n  //           .catch(err => console.log(err))\n  //       })\n  //   }\n\n\n  return isAuthenticated && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    color: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: user.picture,\n    alt: user.name,\n    className: \"rounded-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"Welcome back, \", user.given_name, \"!\"))), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Div, {\n    color: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, \"Search for grocery items to add to your list and see your total carbon footprint for food consumption.\"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, searchResults.length ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 41\n    }\n  }, \" Search Results:\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 69\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default withAuthenticationRequired(User);","map":{"version":3,"sources":["/Users/nikkicastle/Desktop/code/asst-stage-manager/client/src/pages/User.js"],"names":["React","useState","useEffect","useAuth0","withAuthenticationRequired","Container","Col","Row","Button","Card","NavBar","styled","grey","white","Div","div","props","color","User","user","isAuthenticated","searchResults","setSearchResults","searchTerm","setSearchTerm","groceryList","setGroceryList","totalGHG","setTotalGHG","currentUser","sub","handleInputChange","event","target","value","picture","name","given_name","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport { Container, Col, Row, Button, Card } from \"reactstrap\"\nimport NavBar from \"../components/navbar\";\n// import MainJumbotron from \"../components/Jumbotron\";\n// import Footer from \"../components/Footer\";\n// import SearchBar from \"../components/SearchBar\";\nimport styled from \"styled-components\";\n// import API from \"../utils/API\";\n// import Grocerylist from \"../components/GroceryList\";\n// import Converter from \"../utils/Conversion\";\n// import CarIcon from \"../components/CarIcon\";\n\n//Styling\nconst grey = \"#f9f9f9\";\nconst white = \"ffffff\";\n\nconst Div = styled.div`\n  div {\n    text-align: center;\n    background-color: ${props => props.color === \"grey\" ? grey : white};\n    padding: 15px;\n    margin: 0 auto;\n  }\n  p {\n    width: 60%;\n    margin: 15px auto;\n    font-size: 20px;\n    font-family: \"Roboto\";\n  }\n  h2 {\n   margin: 10px auto;\n   font-family: \"Raleway\";\n   font-size: 52px;\n  }\n  .button {\n    background-color: #cb5744;\n    border: none;\n  \n  }\n  .button:hover {\n  background-color: #ec9a59;\n  }\n  .rounded-circle {\n    max-width: 200px;\n  }\n  h4{\n    color: rgb(18, 61, 61);\n  }\n  #equivalency{\n    color: rgb(18, 61, 61);\n  }\n  h5{\n    justify-content: center;\n  }\n  }\n`\n\nconst User = () => {\n  \n  //Variables and States\n  const { user, isAuthenticated } = useAuth0();\n  const [searchResults, setSearchResults] = useState([])\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [groceryList, setGroceryList] = useState([]);\n  const [totalGHG, setTotalGHG] = useState(0)\n  const currentUser = user.sub;\n\n  // => if user then populate else => create user\n//   useEffect(() => {\n\n//     API.getUser(currentUser)\n//       .then(dbUser => {\n//         if (!dbUser.data) {\n//           console.log(\"user not found\")\n//           API.createUser({\n//             username: user.email,\n//             id: user.sub,\n//             groceries: []\n//           })\n//         } else {\n//           console.log(\"yay user found\", dbUser)\n//           API.populateList(dbUser.data.id)\n//             .then(res => {\n//               console.log(res)\n//               setGroceryList(res.data.groceryList);\n//               if (res.data.groceryList.length) {\n//                 calculateGHG(res.data.groceryList);\n//               }\n//             })\n//         }\n//       })\n//       .catch(err => console.log(err));\n//   }, [])\n\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value);\n  }\n\n//   const handleFormSubmit = event => {\n//     event.preventDefault();\n//     // take input search term and set it to correct format to search, first letter uppercase and rest lowercase\n//     let word = searchTerm;\n//     word = word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n//     API.getFood(word)\n//       .then((data) => setSearchResults(data.data))\n//       .catch(err => console.log(err))\n\n//     setSearchTerm(\"\");\n//   }\n\n//   const addToGroceryList = (event, id) => {\n//     event.preventDefault();\n//     // API call to Foods collection to grab food for User to add to list in User collection\n//     API.addItem(id, currentUser)\n//       .then(res => {\n//         API.populateList(currentUser)\n//           .then(res => {\n//             console.log(res)\n//             setGroceryList(res.data.groceryList);\n//             calculateGHG(res.data.groceryList);\n//           })\n//       })\n//       .catch(err => console.log(err))\n//   }\n\n//   const calculateGHG = (list) => {\n//     let totalG = list.reduce((a, b) => {\n//       return { ghgEmission: a.ghgEmission + b.ghgEmission }\n//     })\n//     setTotalGHG(totalG.ghgEmission);\n//   }\n\n//   const removeFromGroceryList = (event, id) => {\n//     event.preventDefault();\n//     // API call to Foods collection to find item by ID and remove from User's collection\n//     API.removeItem(id, currentUser)\n//       .then(res => {\n//         API.populateList(currentUser)\n//           .then(res => {\n//             setGroceryList(res.data.groceryList)\n//             calculateGHG(res.data.groceryList);\n//           })\n//           .catch(err => console.log(err))\n//       })\n//   }\n\n  return (\n    isAuthenticated && (\n      <>\n        <NavBar />\n        {/* <MainJumbotron image={\"userImg\"} /> */}\n\n        <Container fluid={true} >\n          <Div color=\"grey\">\n            <div>\n              <img\n                src={user.picture}\n                alt={user.name}\n                className=\"rounded-circle\" />\n              <h1>Welcome back, {user.given_name}!</h1>\n            </div>\n          </Div>\n\n          <Div>\n            {/* If there are items in the grocery list, populate list. Otherwise subtitle telling User to search for an item */}\n            <div>\n              \n            </div>\n          </Div>\n\n          <Div color=\"grey\">\n            <div>\n              <h4>Search for grocery items to add to your list and see your total carbon footprint for food consumption.</h4>\n              \n              <Row>\n                {searchResults.length ? <h2> Search Results:</h2> : <div></div>}\n              </Row>\n              {/* If there are search results, map through them to create a card for each item in the array. Otherwise note no items were found*/}\n              <Row>\n                \n              </Row>\n            </div>\n          </Div>\n\n          {/* <Footer /> */}\n        </Container>\n      </>\n    )\n  )\n}\n\nexport default withAuthenticationRequired(User);"]},"metadata":{},"sourceType":"module"}